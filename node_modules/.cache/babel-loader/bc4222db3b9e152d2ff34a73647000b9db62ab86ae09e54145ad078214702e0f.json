{"ast":null,"code":"import { ref as dbRef, getDatabase } from 'firebase/database';\nimport { ref } from 'vue';\nexport default {\n  __name: 'LoginPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    // import { dbRef } from '@/firebase';\n    const username = ref('');\n    const password = ref('');\n\n    // let loggedInUser = null;\n    let isLoggedIn = false;\n    let loginError = '';\n    function login() {\n      const usersRef = dbRef(getDatabase(), 'users');\n      usersRef.once('value', snapshot => {\n        const usersData = snapshot.val();\n        if (usersData) {\n          const user = Object.values(usersData).find(u => u.username === username.value);\n          if (user) {\n            if (user.password === password.value) {\n              this.isLoggedIn = true;\n              this.loggedInUser = user;\n              window.location.href = 'main.html';\n            } else {\n              this.loginError = 'Błędny login lub hasło';\n            }\n          } else {\n            this.loginError = 'Błędny login lub hasło';\n          }\n        } else {\n          this.loginError = 'Baza danych użytkowników jest pusta';\n        }\n      });\n    }\n    const __returned__ = {\n      username,\n      password,\n      get isLoggedIn() {\n        return isLoggedIn;\n      },\n      set isLoggedIn(v) {\n        isLoggedIn = v;\n      },\n      get loginError() {\n        return loginError;\n      },\n      set loginError(v) {\n        loginError = v;\n      },\n      login,\n      get dbRef() {\n        return dbRef;\n      },\n      get getDatabase() {\n        return getDatabase;\n      },\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","dbRef","getDatabase","username","password","isLoggedIn","loginError","login","usersRef","once","snapshot","usersData","val","user","Object","values","find","u","value","loggedInUser","window","location","href"],"sources":["D:/UserData/Desktop/UEK/PSM/KKDP/psm-project/src/components/LoginPage.vue"],"sourcesContent":["<template>\r\n        <h1>Logowanie</h1>\r\n        <div v-if=\"!isLoggedIn\">\r\n            <input type=\"text\" ref=\"username\" placeholder=\"Login\"><br>\r\n            <input type=\"password\" ref=\"password\" placeholder=\"Hasło\"><br>\r\n            <button @click=\"login\">Zaloguj</button>\r\n            <p v-if=\"loginError\" style=\"color: red;\">{{ loginError }}</p>\r\n        </div>\r\n        <div v-else>\r\n            <p>Logowanie pomyślne. Przekierowywanie do strony głównej...</p>\r\n        </div>\r\n</template>\r\n\r\n<style>\r\n    body {\r\n            font-family: Arial, sans-serif;\r\n            margin: 0;\r\n            padding: 0;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            height: 100vh;\r\n            background-color: #f0f0f0;\r\n        }\r\n\r\n        .container {\r\n            text-align: center;\r\n        }\r\n\r\n        input[type=\"text\"],\r\n        input[type=\"password\"],\r\n        select,\r\n        textarea,\r\n        button {\r\n            margin: 10px;\r\n            padding: 10px;\r\n            font-size: 16px;\r\n            border-radius: 5px;\r\n            border: 1px solid #ccc;\r\n            width: 300px;\r\n            max-width: 100%;\r\n        }\r\n\r\n        button {\r\n            cursor: pointer;\r\n            background-color: #007bff;\r\n            color: #fff;\r\n            border: none;\r\n        }\r\n\r\n        button:hover {\r\n            background-color: #0056b3;\r\n        }\r\n\r\n        .error-msg {\r\n            color: red;\r\n        }\r\n</style>\r\n\r\n<script setup>\r\n    // import { dbRef } from '@/firebase';\r\n    import { ref as dbRef, getDatabase } from 'firebase/database';\r\n    import { ref } from 'vue';\r\n\r\n    const username = ref('');\r\n    const password = ref('');\r\n\r\n    // let loggedInUser = null;\r\n    let isLoggedIn = false;\r\n    let loginError = '';\r\n\r\n    function login() {\r\n\r\n        const usersRef = dbRef(getDatabase(), 'users');\r\n\r\n        usersRef.once('value', (snapshot) => {\r\n            const usersData = snapshot.val();\r\n            if (usersData) {\r\n                const user = Object.values(usersData).find(u => u.username === username.value);\r\n                if (user) {\r\n                    if (user.password === password.value) {\r\n                        this.isLoggedIn = true;\r\n                        this.loggedInUser = user;\r\n                        window.location.href = 'main.html';\r\n                    } else {\r\n                        this.loginError = 'Błędny login lub hasło';\r\n                    }\r\n                } else {\r\n                    this.loginError = 'Błędny login lub hasło';\r\n                }\r\n            } else {\r\n                this.loginError = 'Baza danych użytkowników jest pusta';\r\n            }\r\n        });\r\n    }\r\n</script>"],"mappings":"AA6DI,SAASA,GAAG,IAAIC,KAAK,EAAEC,WAAW,QAAQ,mBAAmB;AAC7D,SAASF,GAAG,QAAQ,KAAK;;;;;;;;IAFzB;IAIA,MAAMG,QAAQ,GAAGH,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMI,QAAQ,GAAGJ,GAAG,CAAC,EAAE,CAAC;;IAExB;IACA,IAAIK,UAAU,GAAG,KAAK;IACtB,IAAIC,UAAU,GAAG,EAAE;IAEnB,SAASC,KAAKA,CAAA,EAAG;MAEb,MAAMC,QAAQ,GAAGP,KAAK,CAACC,WAAW,CAAC,CAAC,EAAE,OAAO,CAAC;MAE9CM,QAAQ,CAACC,IAAI,CAAC,OAAO,EAAGC,QAAQ,IAAK;QACjC,MAAMC,SAAS,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC;QAChC,IAAID,SAAS,EAAE;UACX,MAAME,IAAI,GAAGC,MAAM,CAACC,MAAM,CAACJ,SAAS,CAAC,CAACK,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACd,QAAQ,KAAKA,QAAQ,CAACe,KAAK,CAAC;UAC9E,IAAIL,IAAI,EAAE;YACN,IAAIA,IAAI,CAACT,QAAQ,KAAKA,QAAQ,CAACc,KAAK,EAAE;cAClC,IAAI,CAACb,UAAU,GAAG,IAAI;cACtB,IAAI,CAACc,YAAY,GAAGN,IAAI;cACxBO,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,WAAW;YACtC,CAAC,MAAM;cACH,IAAI,CAAChB,UAAU,GAAG,wBAAwB;YAC9C;UACJ,CAAC,MAAM;YACH,IAAI,CAACA,UAAU,GAAG,wBAAwB;UAC9C;QACJ,CAAC,MAAM;UACH,IAAI,CAACA,UAAU,GAAG,qCAAqC;QAC3D;MACJ,CAAC,CAAC;IACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}