{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { firebaseApp } from '@/firebase';\nimport { doc, setDoc, getFirestore, collection, getDocs } from 'firebase/firestore';\nimport { ref, onMounted } from 'vue';\nimport { useAuthStore } from '@/stores/auth';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'CompleteProfilePage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const nickname = ref('');\n    const yourCountry = ref('');\n    const contactCountry = ref('');\n    const language = ref('');\n    const birthdate = ref('');\n    const selectedHobbies = ref('');\n    const moreInfo = ref('');\n    let countries = ref([]);\n    let hobbies = ref([]);\n    let selectedContactCountryLanguages = ref([]);\n    const router = useRouter();\n    const authStore = useAuthStore();\n    onMounted(() => {\n      const db = getFirestore(firebaseApp);\n      const langColRef = collection(db, \"languages\");\n      getDocs(langColRef).then(result => {\n        result.forEach(doc => {\n          countries.value.push({\n            'name': doc.id,\n            ...doc.data()\n          });\n        });\n        if (authStore.user.contactCountry) contactCountry.value.value = countries.value.find(country => country.name === authStore.user.contactCountry);\n        if (authStore.user.country) yourCountry.value.value = countries.value.find(country => country.name === authStore.user.country);\n        const countryQuery = countries.value.find(country => country.name === authStore.user.contactCountry);\n        selectedContactCountryLanguages.value = countryQuery ? countryQuery.languages : [];\n        console.log(countries.value);\n        // if(authStore.user.language) language.value.value = authStore.user.language;\n      });\n      const hobbiesColRef = collection(db, \"hobbies\");\n      getDocs(hobbiesColRef).then(result => {\n        result.forEach(doc => {\n          hobbies.value.push(doc.id);\n        });\n        if (authStore.user.moreInfo) moreInfo.value.value = authStore.user.moreInfo;\n      });\n      if (authStore.user.birthdate) birthdate.value.value = authStore.user.birthdate;\n      if (authStore.user.interests) selectedHobbies.value.value = authStore.user.interests;\n      if (authStore.user.nickname) nickname.value.value = authStore.user.nickname;\n    });\n    function contactCountryChanged() {\n      const newCountry = contactCountry.value.value;\n      const countryQuery = countries.value.find(country => country.name === newCountry);\n      selectedContactCountryLanguages.value = countryQuery ? countryQuery.languages : [];\n      language.value.value = '';\n    }\n    function completeProfile() {\n      const db = getFirestore(firebaseApp);\n      const docRef = doc(db, \"users\", authStore.user.uid);\n      const userData = {\n        birthdate: birthdate.value.value,\n        contactCountry: contactCountry.value.value,\n        country: yourCountry.value.value,\n        email: authStore.user.email,\n        interests: selectedHobbies.value.value,\n        language: language.value.value,\n        moreInfo: moreInfo.value.value,\n        nickname: nickname.value.value\n      };\n      setDoc(docRef, userData);\n      authStore.setUser({\n        'uid': authStore.user.uid,\n        ...userData\n      });\n      router.push('/home');\n    }\n    const __returned__ = {\n      nickname,\n      yourCountry,\n      contactCountry,\n      language,\n      birthdate,\n      selectedHobbies,\n      moreInfo,\n      get countries() {\n        return countries;\n      },\n      set countries(v) {\n        countries = v;\n      },\n      get hobbies() {\n        return hobbies;\n      },\n      set hobbies(v) {\n        hobbies = v;\n      },\n      get selectedContactCountryLanguages() {\n        return selectedContactCountryLanguages;\n      },\n      set selectedContactCountryLanguages(v) {\n        selectedContactCountryLanguages = v;\n      },\n      router,\n      authStore,\n      contactCountryChanged,\n      completeProfile,\n      get firebaseApp() {\n        return firebaseApp;\n      },\n      get doc() {\n        return doc;\n      },\n      get setDoc() {\n        return setDoc;\n      },\n      get getFirestore() {\n        return getFirestore;\n      },\n      get collection() {\n        return collection;\n      },\n      get getDocs() {\n        return getDocs;\n      },\n      ref,\n      onMounted,\n      get useAuthStore() {\n        return useAuthStore;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["firebaseApp","doc","setDoc","getFirestore","collection","getDocs","ref","onMounted","useAuthStore","useRouter","nickname","yourCountry","contactCountry","language","birthdate","selectedHobbies","moreInfo","countries","hobbies","selectedContactCountryLanguages","router","authStore","db","langColRef","then","result","forEach","value","push","id","data","user","find","country","name","countryQuery","languages","console","log","hobbiesColRef","interests","contactCountryChanged","newCountry","completeProfile","docRef","uid","userData","email","setUser"],"sources":["D:/UserData/Desktop/UEK/PSM/KKDP/psm-project/src/components/CompleteProfilePage.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <div class=\"navbar\"><img src=\"back.png\" width=\"30px\"/></div>\r\n        <div class=\"mainContent\">\r\n            <h2>Uzupełnij swój profil</h2>\r\n            <form @submit.prevent=\"completeProfile\">\r\n                <input class=\"form-control\" type=\"text\" ref=\"nickname\" placeholder=\"Nick\" required>\r\n                <span id=\"nickname-error\" class=\"error-msg\"></span>\r\n                <select class=\"form-control\" ref=\"yourCountry\">\r\n                    <option value=\"\" selected disabled hidden>Kraj pochodzenia</option>\r\n                    <option v-for=\"(yourCountry, index) in countries\" :key=\"index\" :value=\"yourCountry.name\">{{ yourCountry.name }}</option>\r\n                </select>\r\n                <select class=\"form-control\" ref=\"contactCountry\" @change=\"contactCountryChanged\">\r\n                    <option value=\"\" selected disabled hidden>Kraj kontaktowy</option>\r\n                    <option v-for=\"(contactCountry, index) in countries\" :key=\"index\" :value=\"contactCountry.name\">{{ contactCountry.name }}</option>\r\n                </select>\r\n                <select class=\"form-control\" ref=\"language\">\r\n                    <option value=\"\" selected disabled hidden>Język</option>\r\n                    <option v-for=\"(language, index) in selectedContactCountryLanguages\" :key=\"index\" :value=\"language\">{{ language }}</option>\r\n                </select>\r\n                <input class=\"form-control\" type=\"date\" ref=\"birthdate\" required>\r\n                <select class=\"form-control\" ref=\"selectedHobbies\">\r\n                    <option value=\"\" selected disabled hidden>Zainteresowania</option>\r\n                    <option v-for=\"(hobby, index) in hobbies\" :key=\"index\" :value=\"hobby\">{{ hobby }}</option>\r\n                </select>\r\n                <textarea class=\"form-control\" ref=\"moreInfo\" placeholder=\"Więcej informacji\"></textarea>\r\n                <button class=\"btn btn-primary\" type=\"submit\">Uzupełnij</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style>\r\n\r\n\r\n</style>\r\n\r\n<script setup>\r\n    import { firebaseApp } from '@/firebase';\r\n    import { doc, setDoc, getFirestore, collection, getDocs } from 'firebase/firestore';\r\n    import { ref, onMounted } from 'vue';\r\n    import { useAuthStore } from '@/stores/auth';\r\n    import { useRouter } from 'vue-router';\r\n\r\n    const nickname = ref('');\r\n    const yourCountry = ref('');\r\n    const contactCountry = ref('');\r\n    const language = ref('');\r\n    const birthdate = ref('');\r\n    const selectedHobbies = ref('');\r\n    const moreInfo = ref('');\r\n    let countries = ref([]);\r\n    let hobbies = ref([]);\r\n    let selectedContactCountryLanguages = ref([]);\r\n\r\n    const router = useRouter();\r\n    const authStore = useAuthStore();\r\n\r\n    onMounted(() => {\r\n        const db = getFirestore(firebaseApp);\r\n        const langColRef = collection(db, \"languages\");\r\n        getDocs(langColRef)\r\n        .then((result) => {\r\n            result.forEach((doc) => {\r\n                countries.value.push({'name': doc.id, ...doc.data()});\r\n            })\r\n            if(authStore.user.contactCountry) contactCountry.value.value = countries.value.find(country => country.name === authStore.user.contactCountry);\r\n            if(authStore.user.country) yourCountry.value.value = countries.value.find(country => country.name === authStore.user.country);\r\n            const countryQuery = countries.value.find(country => country.name === authStore.user.contactCountry);\r\n            selectedContactCountryLanguages.value = countryQuery ? countryQuery.languages : [];\r\n            console.log(countries.value);\r\n            // if(authStore.user.language) language.value.value = authStore.user.language;\r\n        });\r\n\r\n        const hobbiesColRef = collection(db, \"hobbies\");\r\n\r\n        getDocs(hobbiesColRef)\r\n        .then((result) => {\r\n            result.forEach((doc) => {\r\n                hobbies.value.push(doc.id);\r\n            })\r\n            if(authStore.user.moreInfo) moreInfo.value.value = authStore.user.moreInfo;\r\n        });\r\n\r\n        \r\n        if(authStore.user.birthdate) birthdate.value.value = authStore.user.birthdate;\r\n        if(authStore.user.interests) selectedHobbies.value.value = authStore.user.interests;\r\n        if(authStore.user.nickname) nickname.value.value = authStore.user.nickname;\r\n\r\n\r\n    })\r\n\r\n    function contactCountryChanged() {\r\n        const newCountry = contactCountry.value.value;\r\n        const countryQuery = countries.value.find(country => country.name === newCountry);\r\n        selectedContactCountryLanguages.value = countryQuery ? countryQuery.languages : [];\r\n        language.value.value = '';\r\n    }\r\n\r\n    function completeProfile() {\r\n\r\n        const db = getFirestore(firebaseApp);\r\n        const docRef = doc(db, \"users\", authStore.user.uid);\r\n        const userData = {\r\n            birthdate: birthdate.value.value,\r\n            contactCountry: contactCountry.value.value,\r\n            country: yourCountry.value.value,\r\n            email: authStore.user.email,\r\n            interests: selectedHobbies.value.value,\r\n            language: language.value.value,\r\n            moreInfo: moreInfo.value.value,\r\n            nickname: nickname.value.value\r\n        }\r\n        setDoc(docRef, userData);\r\n\r\n        authStore.setUser({'uid': authStore.user.uid, ...userData});\r\n        router.push('/home');\r\n    }\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}