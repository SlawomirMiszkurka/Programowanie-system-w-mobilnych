{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  ref: \"nickname\"\n};\nconst _hoisted_3 = {\n  class: \"content\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"footer\", null, \"textbox\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"header\", null, [_createElementVNode(\"span\", _hoisted_2, null, 512 /* NEED_PATCH */)]), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" <component :is=\\\"ReceivedTextMessage\\\" content=\\\"Test\\\"></component> \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.components, component => {\n    return _openBlock(), _createBlock(_resolveDynamicComponent(component.name), {\n      key: component.id,\n      content: component.content\n    }, null, 8 /* PROPS */, [\"content\"]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" <SentTextMessage content=\\\"Test Sent Message\\\"></SentTextMessage>\\r\\n            <ReceivedTextMessage content=\\\"Test Received Message\\\"></ReceivedTextMessage> \")]), _hoisted_4]);\n}","map":{"version":3,"names":["class","ref","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createCommentVNode","_Fragment","_renderList","$setup","components","component","_createBlock","_resolveDynamicComponent","name","key","id","content","_hoisted_4"],"sources":["D:\\UserData\\Desktop\\UEK\\PSM\\KKDP\\psm-project\\src\\components\\MessagesPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <header><span ref=\"nickname\"></span></header>\r\n        <div class=\"content\">\r\n            <!-- <component :is=\"ReceivedTextMessage\" content=\"Test\"></component> -->\r\n            <component v-for=\"component in components\" :is=\"component.name\" :key=\"component.id\" :content=\"component.content\"></component>\r\n            <!-- <SentTextMessage content=\"Test Sent Message\"></SentTextMessage>\r\n            <ReceivedTextMessage content=\"Test Received Message\"></ReceivedTextMessage> -->\r\n        </div>\r\n        <footer>textbox</footer>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\n    .container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n\r\n    .container header, footer {\r\n        padding: 10px;\r\n    }\r\n    .container .content {\r\n        flex: 1 1 auto;\r\n        display: flex;\r\n        flex-direction: column-reverse;\r\n        overflow-y: auto;\r\n        min-height: 0px;\r\n    }\r\n\r\n\r\n\r\n</style>\r\n\r\n<script setup>\r\n    import { useRoute } from 'vue-router';\r\n    import { onMounted, ref } from 'vue';\r\n    import { firebaseApp } from '@/firebase';\r\n    import { and, collection, doc, getDoc, getDocs, getFirestore, or, orderBy, query, where } from 'firebase/firestore';\r\n    import { useAuthStore } from '@/stores/auth';\r\n    import SentTextMessage from './messages/SentTextMessage.vue';\r\n    import ReceivedTextMessage from './messages/ReceivedTextMessage.vue';\r\n    const route = useRoute();\r\n    const auth = useAuthStore();\r\n\r\n    let nickname = ref('default');\r\n    let messages = ref([]);\r\n    let components = ref([]);\r\n    onMounted(() => {\r\n        const db = getFirestore(firebaseApp)\r\n        const messagesColRef = collection(db, \"messages\");\r\n        const userDocRef = doc(db, \"users\", route.params.uid);\r\n\r\n        getDoc(userDocRef)\r\n        .then((snapshot) => {\r\n            if(snapshot.exists()) {\r\n                nickname.value = snapshot.data().nickname;\r\n                console.log(nickname.value);\r\n            }\r\n        })\r\n\r\n        const q = query(messagesColRef, or(and(where('from', '==', auth.user.uid), where('to', '==', route.params.uid)), (where('to', '==', auth.user.uid), where('from', '==', route.params.uid))), orderBy('timestamp'));\r\n        getDocs(q)\r\n        .then((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n                let data = doc.data();\r\n                messages.value.push({'id': doc.id, ...data});\r\n            });\r\n            console.log(messages.value);\r\n            messages.value.forEach((message) => {\r\n                const id = message.id;\r\n                const type = message.type;\r\n                const sent = message.from === auth.user.uid;\r\n                const content = message.content;\r\n\r\n                switch(type) {\r\n                    case 'text':\r\n                        if(sent) {\r\n                            components.value.push({\r\n                                'id': id,\r\n                                'name': SentTextMessage,\r\n                                'content': content\r\n                            });\r\n                        } else {\r\n                            components.value.push({\r\n                                'id': id,\r\n                                'name': ReceivedTextMessage,\r\n                                'content': content\r\n                            });\r\n                        }\r\n                }\r\n\r\n                console.log(components.value);\r\n            });\r\n        })\r\n\r\n        \r\n    });\r\n\r\n</script>"],"mappings":";;EACSA,KAAK,EAAC;AAAW;;EACJC,GAAG,EAAC;AAAU;;EACvBD,KAAK,EAAC;AAAS;gCAMpBE,mBAAA,CAAwB,gBAAhB,SAAO;;uBARnBC,mBAAA,CASM,OATNC,UASM,GARFF,mBAAA,CAA6C,iBAArCA,mBAAA,CAA4B,QAA5BG,UAA4B,8B,GACpCH,mBAAA,CAKM,OALNI,UAKM,GAJFC,mBAAA,0EAAyE,G,kBACzEJ,mBAAA,CAA6HK,SAAA,QALzIC,WAAA,CAK2CC,MAAA,CAAAC,UAAU,EAAvBC,SAAS;yBAA3BC,YAAA,CAA6HC,wBALzI,CAK4DF,SAAS,CAACG,IAAI;MAAGC,GAAG,EAAEJ,SAAS,CAACK,EAAE;MAAGC,OAAO,EAAEN,SAAS,CAACM;;kCACxGX,mBAAA,oKAC+E,C,GAEnFY,UAAwB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}