{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  src: \"play.png\",\n  width: \"30px\"\n};\nconst _hoisted_2 = {\n  key: 1,\n  src: \"pause.png\",\n  width: \"30px\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    onClick: $setup.play,\n    class: \"sent\"\n  }, [!$setup.isPaused ? (_openBlock(), _createElementBlock(\"img\", _hoisted_1)) : _createCommentVNode(\"v-if\", true), $setup.isPaused ? (_openBlock(), _createElementBlock(\"img\", _hoisted_2)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"span\", null, _toDisplayString($setup.audio.currentTime), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["key","src","width","_createElementBlock","onClick","$setup","play","class","isPaused","_hoisted_1","_createCommentVNode","_hoisted_2","_createElementVNode","_toDisplayString","audio","currentTime"],"sources":["D:\\UserData\\Desktop\\UEK\\PSM\\KKDP\\psm-project\\src\\components\\messages\\SentAudioMessage.vue"],"sourcesContent":["<template>\r\n    <div @click=\"play\" class=\"sent\">\r\n        <img v-if=\"!isPaused\" src=\"play.png\" width=\"30px\"/>\r\n        <img v-if=\"isPaused\" src=\"pause.png\" width=\"30px\"/>\r\n        <span>{{ audio.currentTime }}</span>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\n    div.sent {\r\n        display: flex;\r\n        word-wrap: break-word;\r\n        text-align: left;\r\n        border-radius: 15px;\r\n        padding: 10px;\r\n        width: 50%;\r\n        height: 100px;\r\n        max-width: 70%;\r\n        margin-top: 5px;\r\n        margin-left: 30%;\r\n        margin-right: 5px;\r\n        align-self: flex-end;\r\n        background-color: gray;\r\n    }\r\n</style>\r\n\r\n<script setup>\r\nimport { firebaseApp } from '@/firebase';\r\nimport { getDownloadURL, getStorage, ref as storageRef } from 'firebase/storage';\r\nimport { ref } from 'vue';\r\nconst props = defineProps(['content']);\r\nlet audio = new Audio();\r\nlet isPaused = ref(true);\r\nconst url = ref('');\r\nconst storage = getStorage(firebaseApp);\r\ngetDownloadURL(storageRef(storage, `audio/${props.content}`))\r\n.then((fetchUrl) => {\r\n    url.value = fetchUrl;\r\n    audio= new Audio(url.value);\r\n    audio.onpause = () => {\r\n        isPaused = true;\r\n        console.log('paused');\r\n    }\r\n    audio.onplay = () => {\r\n        console.log('played');\r\n        isPaused = false;\r\n    }\r\n})\r\n\r\nfunction play() {\r\n    if(audio.paused) {\r\n        audio.play();\r\n    } else{\r\n        audio.pause();\r\n    }\r\n}\r\n\r\n\r\n\r\n</script>"],"mappings":";;EAAAA,GAAA;EAE8BC,GAAG,EAAC,UAAU;EAACC,KAAK,EAAC;;;EAFnDF,GAAA;EAG6BC,GAAG,EAAC,WAAW;EAACC,KAAK,EAAC;;;uBAF/CC,mBAAA,CAIM;IAJAC,OAAK,EAAEC,MAAA,CAAAC,IAAI;IAAEC,KAAK,EAAC;OACTF,MAAA,CAAAG,QAAQ,I,cAApBL,mBAAA,CAAmD,OAAnDM,UAAmD,KAF3DC,mBAAA,gBAGmBL,MAAA,CAAAG,QAAQ,I,cAAnBL,mBAAA,CAAmD,OAAnDQ,UAAmD,KAH3DD,mBAAA,gBAIQE,mBAAA,CAAoC,cAAAC,gBAAA,CAA3BR,MAAA,CAAAS,KAAK,CAACC,WAAW,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}