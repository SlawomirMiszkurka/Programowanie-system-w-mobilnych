{"ast":null,"code":"import { firebaseApp } from '@/firebase';\nimport { getDownloadURL, getStorage, ref as storageRef } from 'firebase/storage';\nimport { ref } from 'vue';\nexport default {\n  __name: 'SentAudioMessage',\n  props: ['content'],\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    let audio = ref(new Audio());\n    const url = ref('');\n    const storage = getStorage(firebaseApp);\n    getDownloadURL(storageRef(storage, `audio/${props.content}`)).then(fetchUrl => {\n      url.value = fetchUrl;\n      audio.value = new Audio(url.value);\n    });\n    function play() {\n      if (audio.value.paused) {\n        audio.value.play();\n      } else {\n        audio.value.pause();\n      }\n    }\n    const __returned__ = {\n      props,\n      get audio() {\n        return audio;\n      },\n      set audio(v) {\n        audio = v;\n      },\n      url,\n      storage,\n      play,\n      get firebaseApp() {\n        return firebaseApp;\n      },\n      get getDownloadURL() {\n        return getDownloadURL;\n      },\n      get getStorage() {\n        return getStorage;\n      },\n      get storageRef() {\n        return storageRef;\n      },\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["firebaseApp","getDownloadURL","getStorage","ref","storageRef","props","__props","audio","Audio","url","storage","content","then","fetchUrl","value","play","paused","pause"],"sources":["D:/UserData/Desktop/UEK/PSM/KKDP/psm-project/src/components/messages/SentAudioMessage.vue"],"sourcesContent":["<template>\r\n    <div @click=\"play\" class=\"sent\">\r\n        <img v-if=\"audio.paused\" src=\"play.png\" width=\"30px\"/>\r\n        <img v-if=\"!audio.paused\" src=\"pause.png\" width=\"30px\"/>\r\n        <span>{{ audio.currentTime }}</span>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\n    div.sent {\r\n        display: flex;\r\n        word-wrap: break-word;\r\n        text-align: left;\r\n        border-radius: 15px;\r\n        padding: 10px;\r\n        width: 50%;\r\n        height: 100px;\r\n        max-width: 70%;\r\n        margin-top: 5px;\r\n        margin-left: 30%;\r\n        margin-right: 5px;\r\n        align-self: flex-end;\r\n        background-color: gray;\r\n    }\r\n</style>\r\n\r\n<script setup>\r\nimport { firebaseApp } from '@/firebase';\r\nimport { getDownloadURL, getStorage, ref as storageRef } from 'firebase/storage';\r\nimport { ref } from 'vue';\r\nconst props = defineProps(['content']);\r\nlet audio = ref(new Audio());\r\nconst url = ref('');\r\nconst storage = getStorage(firebaseApp);\r\ngetDownloadURL(storageRef(storage, `audio/${props.content}`))\r\n.then((fetchUrl) => {\r\n    url.value = fetchUrl;\r\n    audio.value = new Audio(url.value);\r\n})\r\n\r\nfunction play() {\r\n    if(audio.value.paused) {\r\n        audio.value.play();\r\n    } else{\r\n        audio.value.pause();\r\n    }\r\n}\r\n\r\n\r\n\r\n</script>"],"mappings":"AA2BA,SAASA,WAAW,QAAQ,YAAY;AACxC,SAASC,cAAc,EAAEC,UAAU,EAAEC,GAAG,IAAIC,UAAU,QAAQ,kBAAkB;AAChF,SAASD,GAAG,QAAQ,KAAK;;;;;;;;IACzB,MAAME,KAAK,GAAGC,OAAwB;IACtC,IAAIC,KAAK,GAAGJ,GAAG,CAAC,IAAIK,KAAK,CAAC,CAAC,CAAC;IAC5B,MAAMC,GAAG,GAAGN,GAAG,CAAC,EAAE,CAAC;IACnB,MAAMO,OAAO,GAAGR,UAAU,CAACF,WAAW,CAAC;IACvCC,cAAc,CAACG,UAAU,CAACM,OAAO,EAAG,SAAQL,KAAK,CAACM,OAAQ,EAAC,CAAC,CAAC,CAC5DC,IAAI,CAAEC,QAAQ,IAAK;MAChBJ,GAAG,CAACK,KAAK,GAAGD,QAAQ;MACpBN,KAAK,CAACO,KAAK,GAAG,IAAIN,KAAK,CAACC,GAAG,CAACK,KAAK,CAAC;IACtC,CAAC,CAAC;IAEF,SAASC,IAAIA,CAAA,EAAG;MACZ,IAAGR,KAAK,CAACO,KAAK,CAACE,MAAM,EAAE;QACnBT,KAAK,CAACO,KAAK,CAACC,IAAI,CAAC,CAAC;MACtB,CAAC,MAAK;QACFR,KAAK,CAACO,KAAK,CAACG,KAAK,CAAC,CAAC;MACvB;IACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}