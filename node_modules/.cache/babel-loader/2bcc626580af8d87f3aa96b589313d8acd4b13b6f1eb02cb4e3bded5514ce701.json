{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { firebaseApp } from '@/firebase';\nimport { doc, setDoc, getFirestore, collection, getDocs } from 'firebase/firestore';\nimport { ref, onMounted } from 'vue';\nimport { useAuthStore } from '@/stores/auth';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'CompleteProfilePage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const nickname = ref('');\n    const yourCountry = ref('');\n    const contactCountry = ref('');\n    const language = ref('');\n    const birthdate = ref('');\n    const selectedHobbies = ref('');\n    const moreInfo = ref('');\n    let countries = ref([]);\n    let hobbies = ref([]);\n    let selectedContactCountryLanguages = ref([]);\n    const router = useRouter();\n    onMounted(() => {\n      const db = getFirestore(firebaseApp);\n      const langColRef = collection(db, \"languages\");\n      getDocs(langColRef).then(result => {\n        result.forEach(doc => {\n          countries.value.push({\n            'name': doc.id,\n            ...doc.data()\n          });\n        });\n      });\n      const hobbiesColRef = collection(db, \"hobbies\");\n      getDocs(hobbiesColRef).then(result => {\n        result.forEach(doc => {\n          hobbies.value.push(doc.id);\n        });\n      });\n    });\n    function contactCountryChanged() {\n      const newCountry = contactCountry.value.value;\n      const countryQuery = countries.value.find(country => country.name === newCountry);\n      selectedContactCountryLanguages.value = countryQuery ? countryQuery.languages : [];\n      language.value.value = '';\n    }\n    function completeProfile() {\n      const db = getFirestore(firebaseApp);\n      const authStore = useAuthStore();\n      const docRef = doc(db, \"users\", authStore.user.uid);\n      const userData = {\n        birthdate: birthdate.value.value,\n        contactCountry: contactCountry.value.value,\n        country: yourCountry.value.value,\n        email: authStore.user.email,\n        interests: selectedHobbies.value.value,\n        language: language.value.value,\n        moreInfo: moreInfo.value.value,\n        nickname: nickname.value.value\n      };\n      setDoc(docRef, userData);\n      authStore.setUser({\n        'uid': authStore.user.uid,\n        ...userData\n      });\n      router.push('/home');\n    }\n    const __returned__ = {\n      nickname,\n      yourCountry,\n      contactCountry,\n      language,\n      birthdate,\n      selectedHobbies,\n      moreInfo,\n      get countries() {\n        return countries;\n      },\n      set countries(v) {\n        countries = v;\n      },\n      get hobbies() {\n        return hobbies;\n      },\n      set hobbies(v) {\n        hobbies = v;\n      },\n      get selectedContactCountryLanguages() {\n        return selectedContactCountryLanguages;\n      },\n      set selectedContactCountryLanguages(v) {\n        selectedContactCountryLanguages = v;\n      },\n      router,\n      contactCountryChanged,\n      completeProfile,\n      get firebaseApp() {\n        return firebaseApp;\n      },\n      get doc() {\n        return doc;\n      },\n      get setDoc() {\n        return setDoc;\n      },\n      get getFirestore() {\n        return getFirestore;\n      },\n      get collection() {\n        return collection;\n      },\n      get getDocs() {\n        return getDocs;\n      },\n      ref,\n      onMounted,\n      get useAuthStore() {\n        return useAuthStore;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["firebaseApp","doc","setDoc","getFirestore","collection","getDocs","ref","onMounted","useAuthStore","useRouter","nickname","yourCountry","contactCountry","language","birthdate","selectedHobbies","moreInfo","countries","hobbies","selectedContactCountryLanguages","router","db","langColRef","then","result","forEach","value","push","id","data","hobbiesColRef","contactCountryChanged","newCountry","countryQuery","find","country","name","languages","completeProfile","authStore","docRef","user","uid","userData","email","interests","setUser"],"sources":["D:/UserData/Desktop/UEK/PSM/KKDP/psm-project/src/components/CompleteProfilePage.vue"],"sourcesContent":["<template>\r\n    <div class=\"completeProfileContainer\">\r\n        <div class=\"navbar\"><img src=\"back.png\" width=\"30px\"/></div>\r\n        <div class=\"completeProfileContent\">\r\n            <h2>Uzupełnij swój profil</h2>\r\n            <form @submit.prevent=\"completeProfile\">\r\n                <input type=\"text\" ref=\"nickname\" placeholder=\"Nick\" required>\r\n                <span id=\"nickname-error\" class=\"error-msg\"></span><br>\r\n                <select ref=\"yourCountry\">\r\n                    <option value=\"\" selected disabled hidden>Kraj pochodzenia</option>\r\n                    <option v-for=\"(yourCountry, index) in countries\" :key=\"index\" :value=\"yourCountry.name\">{{ yourCountry.name }}</option>\r\n                </select>\r\n                <select ref=\"contactCountry\" @change=\"contactCountryChanged\">\r\n                    <option value=\"\" selected disabled hidden>Kraj kontaktowy</option>\r\n                    <option v-for=\"(contactCountry, index) in countries\" :key=\"index\" :value=\"contactCountry.name\">{{ contactCountry.name }}</option>\r\n                </select>\r\n                <select ref=\"language\">\r\n                    <option value=\"\" selected disabled hidden>Język</option>\r\n                    <option v-for=\"(language, index) in selectedContactCountryLanguages\" :key=\"index\" :value=\"language\">{{ language }}</option>\r\n                </select><br>\r\n                <input type=\"date\" ref=\"birthdate\" required><br>\r\n                <select ref=\"selectedHobbies\">\r\n                    <option value=\"\" selected disabled hidden>Zainteresowania</option>\r\n                    <option v-for=\"(hobby, index) in hobbies\" :key=\"index\" :value=\"hobby\">{{ hobby }}</option>\r\n                </select><br>\r\n                <textarea ref=\"moreInfo\" placeholder=\"Więcej informacji\"></textarea><br>\r\n                <button type=\"submit\">Uzupełnij</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style>\r\n\r\n\r\n.completeProfileContainer .navbar {\r\n    margin: 10px;\r\n}\r\n\r\n.completeProfileContainer .completeProfileContent {\r\n    flex: 1 1 auto;\r\n}\r\n\r\n.completeProfileContent {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  justify-content: center; \r\n  align-items: center;\r\n}\r\n</style>\r\n\r\n<script setup>\r\n    import { firebaseApp } from '@/firebase';\r\n    import { doc, setDoc, getFirestore, collection, getDocs } from 'firebase/firestore';\r\n    import { ref, onMounted } from 'vue';\r\n    import { useAuthStore } from '@/stores/auth';\r\n    import { useRouter } from 'vue-router';\r\n\r\n    const nickname = ref('');\r\n    const yourCountry = ref('');\r\n    const contactCountry = ref('');\r\n    const language = ref('');\r\n    const birthdate = ref('');\r\n    const selectedHobbies = ref('');\r\n    const moreInfo = ref('');\r\n    let countries = ref([]);\r\n    let hobbies = ref([]);\r\n    let selectedContactCountryLanguages = ref([]);\r\n\r\n    const router = useRouter();\r\n\r\n    onMounted(() => {\r\n        const db = getFirestore(firebaseApp);\r\n        const langColRef = collection(db, \"languages\");\r\n\r\n        getDocs(langColRef)\r\n        .then((result) => {\r\n            result.forEach((doc) => {\r\n                countries.value.push({'name': doc.id, ...doc.data()});\r\n            })\r\n        });\r\n\r\n        const hobbiesColRef = collection(db, \"hobbies\");\r\n\r\n        getDocs(hobbiesColRef)\r\n        .then((result) => {\r\n            result.forEach((doc) => {\r\n                hobbies.value.push(doc.id);\r\n            })\r\n        });\r\n    })\r\n\r\n    function contactCountryChanged() {\r\n        const newCountry = contactCountry.value.value;\r\n        const countryQuery = countries.value.find(country => country.name === newCountry);\r\n        selectedContactCountryLanguages.value = countryQuery ? countryQuery.languages : [];\r\n        language.value.value = '';\r\n    }\r\n\r\n    function completeProfile() {\r\n\r\n        const db = getFirestore(firebaseApp);\r\n        const authStore = useAuthStore();\r\n        const docRef = doc(db, \"users\", authStore.user.uid);\r\n        const userData = {\r\n            birthdate: birthdate.value.value,\r\n            contactCountry: contactCountry.value.value,\r\n            country: yourCountry.value.value,\r\n            email: authStore.user.email,\r\n            interests: selectedHobbies.value.value,\r\n            language: language.value.value,\r\n            moreInfo: moreInfo.value.value,\r\n            nickname: nickname.value.value\r\n        }\r\n        setDoc(docRef, userData);\r\n\r\n        authStore.setUser({'uid': authStore.user.uid, ...userData});\r\n        router.push('/home');\r\n    }\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}