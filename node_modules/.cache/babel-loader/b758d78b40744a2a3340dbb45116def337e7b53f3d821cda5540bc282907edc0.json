{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"sent\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"img\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.startPlay && _ctx.startPlay(...args)),\n    src: \"play.png\",\n    width: \"30px\"\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","args","_ctx","startPlay","src","width"],"sources":["D:\\UserData\\Desktop\\UEK\\PSM\\KKDP\\psm-project\\src\\components\\messages\\SentAudioMessage.vue"],"sourcesContent":["<template>\r\n    <div class=\"sent\">\r\n        <img @click=\"startPlay\" src=\"play.png\" width=\"30px\"/>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\n    div.sent {\r\n        display: flex;\r\n        word-wrap: break-word;\r\n        text-align: left;\r\n        border-radius: 15px;\r\n        padding: 10px;\r\n        width: 50%;\r\n        height: 100px;\r\n        max-width: 70%;\r\n        margin-top: 5px;\r\n        margin-left: 30%;\r\n        margin-right: 5px;\r\n        align-self: flex-end;\r\n        background-color: gray;\r\n    }\r\n</style>\r\n\r\n<script setup>\r\nimport { firebaseApp } from '@/firebase';\r\nimport { getDownloadURL, getStorage, ref as storageRef } from 'firebase/storage';\r\nimport { ref } from 'vue';\r\nconst props = defineProps(['content']);\r\nconst url = ref('');\r\nconst storage = getStorage(firebaseApp);\r\ngetDownloadURL(storageRef(storage, `audio/${props.content}`))\r\n.then((fetchUrl) => {\r\n    url.value = fetchUrl;\r\n})\r\n\r\n</script>"],"mappings":";;EACSA,KAAK,EAAC;AAAM;;uBAAjBC,mBAAA,CAEM,OAFNC,UAEM,GADFC,mBAAA,CAAqD;IAA/CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,SAAA,IAAAD,IAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;IAAEG,GAAG,EAAC,UAAU;IAACC,KAAK,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}