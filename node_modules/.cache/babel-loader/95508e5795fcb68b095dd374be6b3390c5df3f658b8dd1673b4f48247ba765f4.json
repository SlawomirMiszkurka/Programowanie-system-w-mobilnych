{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { firebaseApp } from '@/firebase';\nimport { doc, setDoc, getFirestore, collection, getDocs } from 'firebase/firestore';\nimport { ref, onMounted } from 'vue';\nimport { useAuthStore } from '@/stores/auth';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'CompleteProfilePage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const nickname = ref('');\n    const yourCountry = ref('');\n    const contactCountry = ref('');\n    const language = ref('');\n    const birthdate = ref('');\n    const interests = ref('');\n    const moreInfo = ref('');\n    let countries = ref([]);\n    let selectedContactCountryLanguages = ref([]);\n    const router = useRouter();\n    onMounted(() => {\n      const db = getFirestore(firebaseApp);\n      const colRef = collection(db, \"languages\");\n      getDocs(colRef).then(result => {\n        result.forEach(doc => {\n          countries.value.push({\n            'name': doc.id,\n            ...doc.data()\n          });\n        });\n        console.log(countries.value);\n      });\n    });\n    function contactCountryChanged() {\n      const newCountry = contactCountry.value.value;\n      const countryQuery = countries.value.find(country => country.name === newCountry);\n      selectedContactCountryLanguages = countryQuery ? countryQuery.languages : [];\n      language.value.value = '';\n    }\n    function completeProfile() {\n      const db = getFirestore(firebaseApp);\n      const authStore = useAuthStore();\n      const docRef = doc(db, \"users\", authStore.user.uid);\n      const userData = {\n        birthdate: birthdate.value.value,\n        contactCountry: contactCountry.value.value,\n        country: yourCountry.value.value,\n        email: authStore.user.email,\n        interests: interests.value.value,\n        language: language.value.value,\n        moreInfo: moreInfo.value.value,\n        nickname: nickname.value.value\n      };\n      setDoc(docRef, userData);\n      authStore.setUser({\n        'uid': authStore.user.uid,\n        ...userData\n      });\n      router.push('/home');\n    }\n    const __returned__ = {\n      nickname,\n      yourCountry,\n      contactCountry,\n      language,\n      birthdate,\n      interests,\n      moreInfo,\n      get countries() {\n        return countries;\n      },\n      set countries(v) {\n        countries = v;\n      },\n      get selectedContactCountryLanguages() {\n        return selectedContactCountryLanguages;\n      },\n      set selectedContactCountryLanguages(v) {\n        selectedContactCountryLanguages = v;\n      },\n      router,\n      contactCountryChanged,\n      completeProfile,\n      get firebaseApp() {\n        return firebaseApp;\n      },\n      get doc() {\n        return doc;\n      },\n      get setDoc() {\n        return setDoc;\n      },\n      get getFirestore() {\n        return getFirestore;\n      },\n      get collection() {\n        return collection;\n      },\n      get getDocs() {\n        return getDocs;\n      },\n      ref,\n      onMounted,\n      get useAuthStore() {\n        return useAuthStore;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["firebaseApp","doc","setDoc","getFirestore","collection","getDocs","ref","onMounted","useAuthStore","useRouter","nickname","yourCountry","contactCountry","language","birthdate","interests","moreInfo","countries","selectedContactCountryLanguages","router","db","colRef","then","result","forEach","value","push","id","data","console","log","contactCountryChanged","newCountry","countryQuery","find","country","name","languages","completeProfile","authStore","docRef","user","uid","userData","email","setUser"],"sources":["D:/UserData/Desktop/UEK/PSM/KKDP/psm-project/src/components/CompleteProfilePage.vue"],"sourcesContent":["<template>\r\n    <h2>Uzupełnij swój profil</h2>\r\n    <form @submit.prevent=\"completeProfile\">\r\n        <input type=\"text\" ref=\"nickname\" placeholder=\"Nick\" required>\r\n        <span id=\"nickname-error\" class=\"error-msg\"></span><br>\r\n        <select ref=\"yourCountry\">\r\n            <option value=\"\" selected disabled hidden>Kraj pochodzenia</option>\r\n            <option v-for=\"(yourCountry, index) in countries\" :key=\"index\" :value=\"yourCountry.name\">{{ yourCountry.name }}</option>\r\n        </select>\r\n        <select ref=\"contactCountry\" @change=\"contactCountryChanged\">\r\n            <option value=\"\" selected disabled hidden>Kraj kontaktowy</option>\r\n            <option v-for=\"(contactCountry, index) in countries\" :key=\"index\" :value=\"contactCountry.name\">{{ contactCountry.name }}</option>\r\n        </select>\r\n        <select ref=\"language\">\r\n            <option value=\"\" selected disabled hidden>Język</option>\r\n            <option v-for=\"(language, index) in selectedContactCountryLanguages\" :key=\"index\" :value=\"language\">{{ language }}</option>\r\n        </select><br>\r\n        <input type=\"date\" ref=\"birthdate\" required><br>\r\n        <select ref=\"interests\">\r\n            <option value=\"\" selected disabled hidden>Zainteresowania</option>\r\n            <option value=\"sport\">Sport</option>\r\n            <option value=\"muzyka\">Muzyka</option>\r\n        </select><br>\r\n        <textarea ref=\"moreInfo\" placeholder=\"Więcej informacji\"></textarea><br>\r\n        <button type=\"submit\">Uzupełnij</button>\r\n    </form>\r\n</template>\r\n\r\n<style>\r\n    body {\r\n        font-family: Arial, sans-serif;\r\n        margin: 0;\r\n        padding: 0;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        height: 100vh;\r\n        background-color: #f0f0f0;\r\n    }\r\n\r\n    .container {\r\n        text-align: center;\r\n    }\r\n\r\n    input[type=\"text\"],\r\n    input[type=\"password\"],\r\n    select,\r\n    textarea,\r\n    button {\r\n        margin: 10px;\r\n        padding: 10px;\r\n        font-size: 16px;\r\n        border-radius: 5px;\r\n        border: 1px solid #ccc;\r\n        width: 300px;\r\n        max-width: 100%;\r\n    }\r\n\r\n    button {\r\n        cursor: pointer;\r\n        background-color: #007bff;\r\n        color: #fff;\r\n        border: none;\r\n    }\r\n\r\n    button:hover {\r\n        background-color: #0056b3;\r\n    }\r\n\r\n    .error-msg {\r\n        color: red;\r\n    }\r\n</style>\r\n\r\n<script setup>\r\n    import { firebaseApp } from '@/firebase';\r\n    import { doc, setDoc, getFirestore, collection, getDocs } from 'firebase/firestore';\r\n    import { ref, onMounted } from 'vue';\r\n    import { useAuthStore } from '@/stores/auth';\r\n    import { useRouter } from 'vue-router';\r\n\r\n    const nickname = ref('');\r\n    const yourCountry = ref('');\r\n    const contactCountry = ref('');\r\n    const language = ref('');\r\n    const birthdate = ref('');\r\n    const interests = ref('');\r\n    const moreInfo = ref('');\r\n    let countries = ref([]);\r\n    let selectedContactCountryLanguages = ref([]);\r\n\r\n    const router = useRouter();\r\n\r\n    onMounted(() => {\r\n        const db = getFirestore(firebaseApp);\r\n        const colRef = collection(db, \"languages\");\r\n\r\n        getDocs(colRef)\r\n        .then((result) => {\r\n            result.forEach((doc) => {\r\n                countries.value.push({'name': doc.id, ...doc.data()});\r\n            })\r\n            console.log(countries.value);\r\n        });\r\n    })\r\n\r\n    function contactCountryChanged() {\r\n        const newCountry = contactCountry.value.value;\r\n        const countryQuery = countries.value.find(country => country.name === newCountry);\r\n        selectedContactCountryLanguages = countryQuery ? countryQuery.languages : [];\r\n        language.value.value = '';\r\n    }\r\n\r\n    function completeProfile() {\r\n\r\n        const db = getFirestore(firebaseApp);\r\n        const authStore = useAuthStore();\r\n        const docRef = doc(db, \"users\", authStore.user.uid);\r\n        const userData = {\r\n            birthdate: birthdate.value.value,\r\n            contactCountry: contactCountry.value.value,\r\n            country: yourCountry.value.value,\r\n            email: authStore.user.email,\r\n            interests: interests.value.value,\r\n            language: language.value.value,\r\n            moreInfo: moreInfo.value.value,\r\n            nickname: nickname.value.value\r\n        }\r\n        setDoc(docRef, userData);\r\n\r\n        authStore.setUser({'uid': authStore.user.uid, ...userData});\r\n        router.push('/home');\r\n    }\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}