{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { firebaseApp } from '@/firebase';\nimport { useAuthStore } from '@/stores/auth';\nimport { collection, doc, getDoc, getDocs, getFirestore, or, query, where } from 'firebase/firestore';\nimport { onMounted } from 'vue';\nexport default {\n  __name: 'MessagesListPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    onMounted(() => {\n      const db = getFirestore(firebaseApp);\n      const messagesColRef = collection(db, \"messages\");\n      const auth = useAuthStore();\n      const q = query(messagesColRef, or(where('from', '==', auth.user.uid), where('to', '==', auth.user.uid)));\n      const uniqueRecipents = [];\n      getDocs(q).then(snapshot => {\n        snapshot.forEach(doc => {\n          let data = doc.data();\n          if (data.from != auth.user.uid && !uniqueRecipents.includes(data.from)) {\n            uniqueRecipents.push(data.from);\n          }\n          if (data.to != auth.user.uid && !uniqueRecipents.includes(data.to)) {\n            uniqueRecipents.push(data.to);\n          }\n        });\n        let uniqueRecipentsData = [];\n        uniqueRecipents.forEach(recipent => {\n          const recipentDoc = doc(db, \"users\", recipent);\n          getDoc(recipentDoc).then(snapshot => {\n            if (snapshot.exists()) {\n              uniqueRecipentsData.push({\n                'uid': recipent,\n                nickname: snapshot.data().nickname\n              });\n            }\n          });\n        });\n        console.log(uniqueRecipentsData);\n      });\n    });\n    const __returned__ = {\n      get firebaseApp() {\n        return firebaseApp;\n      },\n      get useAuthStore() {\n        return useAuthStore;\n      },\n      get collection() {\n        return collection;\n      },\n      get doc() {\n        return doc;\n      },\n      get getDoc() {\n        return getDoc;\n      },\n      get getDocs() {\n        return getDocs;\n      },\n      get getFirestore() {\n        return getFirestore;\n      },\n      get or() {\n        return or;\n      },\n      get query() {\n        return query;\n      },\n      get where() {\n        return where;\n      },\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["firebaseApp","useAuthStore","collection","doc","getDoc","getDocs","getFirestore","or","query","where","onMounted","db","messagesColRef","auth","q","user","uid","uniqueRecipents","then","snapshot","forEach","data","from","includes","push","to","uniqueRecipentsData","recipent","recipentDoc","exists","nickname","console","log"],"sources":["D:/UserData/Desktop/UEK/PSM/KKDP/psm-project/src/components/MessagesListPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <div>test 1</div>\r\n        <div>test 2</div>\r\n    </div>\r\n</template>\r\n<style>\r\n    body {\r\n            font-family: Arial, sans-serif;\r\n            margin: 0;\r\n            padding: 0;\r\n            display: flex;\r\n            /* justify-content: center; */\r\n            /* align-items: center; */\r\n            height: 100vh;\r\n            background-color: #f0f0f0;\r\n        }\r\n\r\n        .container {\r\n            text-align: center;\r\n            display:flex;\r\n            flex-direction: column;\r\n        }\r\n\r\n        input[type=\"text\"],\r\n        input[type=\"password\"],\r\n        select,\r\n        textarea,\r\n        button {\r\n            margin: 10px;\r\n            padding: 10px;\r\n            font-size: 16px;\r\n            border-radius: 5px;\r\n            border: 1px solid #ccc;\r\n            width: 300px;\r\n            max-width: 100%;\r\n        }\r\n\r\n        button {\r\n            cursor: pointer;\r\n            background-color: #007bff;\r\n            color: #fff;\r\n            border: none;\r\n        }\r\n\r\n        button:hover {\r\n            background-color: #0056b3;\r\n        }\r\n\r\n        .error-msg {\r\n            color: red;\r\n        }\r\n</style>\r\n<script setup>\r\n    import { firebaseApp } from '@/firebase';\r\nimport { useAuthStore } from '@/stores/auth';\r\nimport { collection, doc, getDoc, getDocs, getFirestore, or, query, where } from 'firebase/firestore';\r\nimport { onMounted } from 'vue';\r\n\r\n    onMounted(() => {\r\n        const db = getFirestore(firebaseApp);\r\n        const messagesColRef = collection(db, \"messages\");\r\n        const auth = useAuthStore();\r\n\r\n        const q = query(messagesColRef, or(where('from', '==', auth.user.uid),\r\n        where('to', '==', auth.user.uid)\r\n        ))\r\n\r\n        const uniqueRecipents = [];\r\n\r\n        getDocs(q)\r\n        .then((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n                let data = doc.data();\r\n\r\n                if(data.from != auth.user.uid && !uniqueRecipents.includes(data.from)) {\r\n                    uniqueRecipents.push(data.from);\r\n                }\r\n\r\n                if(data.to != auth.user.uid && !uniqueRecipents.includes(data.to)) {\r\n                    uniqueRecipents.push(data.to);\r\n                }\r\n            })\r\n\r\n            let uniqueRecipentsData = [];\r\n\r\n            uniqueRecipents.forEach(recipent => {\r\n                const recipentDoc = doc(db, \"users\", recipent);\r\n                getDoc(recipentDoc)\r\n                .then((snapshot) => {\r\n                    if(snapshot.exists()) {\r\n                        uniqueRecipentsData.push({\r\n                            'uid': recipent,\r\n                            nickname: snapshot.data().nickname\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n\r\n            console.log(uniqueRecipentsData);\r\n        })\r\n\r\n\r\n    });\r\n</script>"],"mappings":";AAsDI,SAASA,WAAW,QAAQ,YAAY;AAC5C,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAEC,YAAY,EAAEC,EAAE,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;AACrG,SAASC,SAAS,QAAQ,KAAK;;;;;;;IAE3BA,SAAS,CAAC,MAAM;MACZ,MAAMC,EAAE,GAAGL,YAAY,CAACN,WAAW,CAAC;MACpC,MAAMY,cAAc,GAAGV,UAAU,CAACS,EAAE,EAAE,UAAU,CAAC;MACjD,MAAME,IAAI,GAAGZ,YAAY,CAAC,CAAC;MAE3B,MAAMa,CAAC,GAAGN,KAAK,CAACI,cAAc,EAAEL,EAAE,CAACE,KAAK,CAAC,MAAM,EAAE,IAAI,EAAEI,IAAI,CAACE,IAAI,CAACC,GAAG,CAAC,EACrEP,KAAK,CAAC,IAAI,EAAE,IAAI,EAAEI,IAAI,CAACE,IAAI,CAACC,GAAG,CAC/B,CAAC,CAAC;MAEF,MAAMC,eAAe,GAAG,EAAE;MAE1BZ,OAAO,CAACS,CAAC,CAAC,CACTI,IAAI,CAAEC,QAAQ,IAAK;QAChBA,QAAQ,CAACC,OAAO,CAAEjB,GAAG,IAAK;UACtB,IAAIkB,IAAI,GAAGlB,GAAG,CAACkB,IAAI,CAAC,CAAC;UAErB,IAAGA,IAAI,CAACC,IAAI,IAAIT,IAAI,CAACE,IAAI,CAACC,GAAG,IAAI,CAACC,eAAe,CAACM,QAAQ,CAACF,IAAI,CAACC,IAAI,CAAC,EAAE;YACnEL,eAAe,CAACO,IAAI,CAACH,IAAI,CAACC,IAAI,CAAC;UACnC;UAEA,IAAGD,IAAI,CAACI,EAAE,IAAIZ,IAAI,CAACE,IAAI,CAACC,GAAG,IAAI,CAACC,eAAe,CAACM,QAAQ,CAACF,IAAI,CAACI,EAAE,CAAC,EAAE;YAC/DR,eAAe,CAACO,IAAI,CAACH,IAAI,CAACI,EAAE,CAAC;UACjC;QACJ,CAAC,CAAC;QAEF,IAAIC,mBAAmB,GAAG,EAAE;QAE5BT,eAAe,CAACG,OAAO,CAACO,QAAQ,IAAI;UAChC,MAAMC,WAAW,GAAGzB,GAAG,CAACQ,EAAE,EAAE,OAAO,EAAEgB,QAAQ,CAAC;UAC9CvB,MAAM,CAACwB,WAAW,CAAC,CAClBV,IAAI,CAAEC,QAAQ,IAAK;YAChB,IAAGA,QAAQ,CAACU,MAAM,CAAC,CAAC,EAAE;cAClBH,mBAAmB,CAACF,IAAI,CAAC;gBACrB,KAAK,EAAEG,QAAQ;gBACfG,QAAQ,EAAEX,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACS;cAC9B,CAAC,CAAC;YACN;UACJ,CAAC,CAAC;QACN,CAAC,CAAC;QAEFC,OAAO,CAACC,GAAG,CAACN,mBAAmB,CAAC;MACpC,CAAC,CAAC;IAGN,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}