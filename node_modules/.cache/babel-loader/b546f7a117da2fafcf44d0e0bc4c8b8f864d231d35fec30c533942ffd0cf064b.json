{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"headerText\"\n}, \"Nowi znajomi\", -1);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"width\": \"30px\"\n  }\n}, null, -1);\nconst _hoisted_4 = {\n  class: \"content\"\n};\nconst _hoisted_5 = [\"onClick\"];\nimport { firebaseApp } from '@/firebase';\nimport { useAuthStore } from '@/stores/auth';\nimport { collection, doc, getDoc, getDocs, getFirestore, or, query, where } from 'firebase/firestore';\nimport { onMounted, ref } from 'vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'NewContactsPage',\n  setup(__props) {\n    const router = useRouter();\n    const auth = useAuthStore();\n    let newContactsData = ref([]);\n    function goBack() {\n      router.go(-1);\n    }\n    function openMessages(uid) {\n      router.push(`/messages/${uid}`);\n    }\n    onMounted(() => {\n      const db = getFirestore(firebaseApp);\n      const usersColRef = collection(db, \"users\");\n      const messagesColRef = collection(db, \"messages\");\n      const q = query(usersColRef, where('country', '==', auth.user.contactCountry), where('interests', '==', auth.user.interests));\n      let newContacts = [];\n      getDocs(q).then(snapshot => {\n        snapshot.forEach(doc => {\n          newContacts.push(doc.id);\n        });\n        const uniqueRecipents = [];\n        const q2 = query(messagesColRef, or(where('from', '==', auth.user.uid), where('to', '==', auth.user.uid)));\n        getDocs(q2).then(snapshot => {\n          snapshot.forEach(doc => {\n            let data = doc.data();\n            if (data.from != auth.user.uid && !uniqueRecipents.includes(data.from)) {\n              uniqueRecipents.push(data.from);\n            }\n            if (data.to != auth.user.uid && !uniqueRecipents.includes(data.to)) {\n              uniqueRecipents.push(data.to);\n            }\n          });\n          const newContactsVerified = [];\n          console.log(uniqueRecipents);\n          console.log(newContacts);\n          newContacts.forEach(contact => {\n            if (!uniqueRecipents.includes(contact)) {\n              newContactsVerified.push(contact);\n            }\n          });\n          console.log(newContactsVerified);\n          newContactsVerified.forEach(recipent => {\n            const recipentDoc = doc(db, \"users\", recipent);\n            getDoc(recipentDoc).then(snapshot => {\n              if (snapshot.exists()) {\n                newContactsData.value.push({\n                  'uid': recipent,\n                  nickname: snapshot.data().nickname\n                });\n              }\n            });\n          });\n        });\n      });\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"header\", {\n        class: \"navbar\"\n      }, [_createElementVNode(\"img\", {\n        onClick: goBack,\n        src: \"back.png\",\n        width: \"30px\"\n      }), _hoisted_2, _hoisted_3]), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(newContactsData), recipent => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          onClick: $event => openMessages(recipent.uid),\n          class: \"nick\",\n          key: recipent.uid\n        }, [_createElementVNode(\"h2\", null, _toDisplayString(recipent.nickname), 1)], 8, _hoisted_5);\n      }), 128))])]);\n    };\n  }\n};","map":{"version":3,"names":["firebaseApp","useAuthStore","collection","doc","getDoc","getDocs","getFirestore","or","query","where","onMounted","ref","useRouter","router","auth","newContactsData","goBack","go","openMessages","uid","push","db","usersColRef","messagesColRef","q","user","contactCountry","interests","newContacts","then","snapshot","forEach","id","uniqueRecipents","q2","data","from","includes","to","newContactsVerified","console","log","contact","recipent","recipentDoc","exists","value","nickname"],"sources":["D:/UserData/Desktop/UEK/PSM/KKDP/psm-project/src/components/NewContactsPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <header class=\"navbar\">\r\n            <img @click=\"goBack\" src=\"back.png\" width=\"30px\"/>\r\n            <span class=\"headerText\">Nowi znajomi</span>\r\n            <div style=\"width: 30px;\"></div>\r\n        </header>\r\n        <div class=\"content\">\r\n            <div @click=\"openMessages(recipent.uid)\" class=\"nick\" v-for=\"recipent in newContactsData\" :key=\"recipent.uid\"><h2>{{ recipent.nickname }}</h2></div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n    import { firebaseApp } from '@/firebase';\r\nimport { useAuthStore } from '@/stores/auth';\r\nimport { collection, doc, getDoc, getDocs, getFirestore, or, query, where } from 'firebase/firestore';\r\nimport { onMounted, ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\n\r\n    const router = useRouter();\r\n    const auth = useAuthStore();\r\n\r\n    let newContactsData = ref([]);\r\n\r\n    function goBack() {\r\n        router.go(-1);\r\n    }\r\n\r\n    function openMessages(uid) {\r\n        router.push(`/messages/${uid}`)\r\n    }\r\n\r\n    onMounted(() => {\r\n        const db = getFirestore(firebaseApp);\r\n        const usersColRef = collection(db, \"users\");\r\n        const messagesColRef = collection(db, \"messages\");\r\n\r\n        const q = query(usersColRef, where('country', '==', auth.user.contactCountry), where('interests', '==', auth.user.interests));\r\n\r\n        let newContacts = [];\r\n\r\n        getDocs(q)\r\n        .then((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n                newContacts.push(doc.id);\r\n            })\r\n            const uniqueRecipents = [];\r\n\r\n            const q2 = query(messagesColRef, or(where('from', '==', auth.user.uid),\r\n            where('to', '==', auth.user.uid)))\r\n        \r\n            getDocs(q2)\r\n            .then((snapshot) => {\r\n                snapshot.forEach((doc) => {\r\n                    let data = doc.data();\r\n\r\n                    if(data.from != auth.user.uid && !uniqueRecipents.includes(data.from)) {\r\n                        uniqueRecipents.push(data.from);\r\n                    }\r\n\r\n                    if(data.to != auth.user.uid && !uniqueRecipents.includes(data.to)) {\r\n                        uniqueRecipents.push(data.to);\r\n                    }\r\n                })\r\n\r\n                const newContactsVerified = [];\r\n                console.log(uniqueRecipents);\r\n                console.log(newContacts);\r\n                newContacts.forEach((contact) => {\r\n                    if(!uniqueRecipents.includes(contact)) {\r\n                        newContactsVerified.push(contact);\r\n                    }\r\n                });\r\n                console.log(newContactsVerified);\r\n                newContactsVerified.forEach(recipent => {\r\n                    const recipentDoc = doc(db, \"users\", recipent);\r\n                    getDoc(recipentDoc)\r\n                    .then((snapshot) => {\r\n                        if(snapshot.exists()) {\r\n                            newContactsData.value.push({\r\n                                'uid': recipent,\r\n                                nickname: snapshot.data().nickname\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n\r\n            })\r\n        })\r\n    });\r\n\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}