{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useRoute } from 'vue-router';\nimport { onMounted, ref } from 'vue';\nimport { firebaseApp } from '@/firebase';\nimport { and, collection, doc, getDoc, getDocs, getFirestore, or, orderBy, query, where } from 'firebase/firestore';\nimport { useAuthStore } from '@/stores/auth';\nimport SentTextMessage from './messages/SentTextMessage.vue';\nexport default {\n  __name: 'MessagesPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const auth = useAuthStore();\n    let nickname = ref('');\n    let messages = ref([]);\n    onMounted(() => {\n      const db = getFirestore(firebaseApp);\n      const messagesColRef = collection(db, \"messages\");\n      const userDocRef = doc(db, \"users\", route.params.uid);\n      getDoc(userDocRef).then(snapshot => {\n        if (snapshot.exists()) {\n          nickname.value = snapshot.data().nickname;\n        }\n      });\n      const q = query(messagesColRef, or(and(where('from', '==', auth.user.uid), where('to', '==', route.params.uid)), (where('to', '==', auth.user.uid), where('from', '==', route.params.uid))), orderBy('timestamp'));\n      getDocs(q).then(snapshot => {\n        snapshot.forEach(doc => {\n          let data = doc.data();\n          messages.value.push(data);\n        });\n        console.log(messages);\n      });\n    });\n    const __returned__ = {\n      route,\n      auth,\n      get nickname() {\n        return nickname;\n      },\n      set nickname(v) {\n        nickname = v;\n      },\n      get messages() {\n        return messages;\n      },\n      set messages(v) {\n        messages = v;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      onMounted,\n      ref,\n      get firebaseApp() {\n        return firebaseApp;\n      },\n      get and() {\n        return and;\n      },\n      get collection() {\n        return collection;\n      },\n      get doc() {\n        return doc;\n      },\n      get getDoc() {\n        return getDoc;\n      },\n      get getDocs() {\n        return getDocs;\n      },\n      get getFirestore() {\n        return getFirestore;\n      },\n      get or() {\n        return or;\n      },\n      get orderBy() {\n        return orderBy;\n      },\n      get query() {\n        return query;\n      },\n      get where() {\n        return where;\n      },\n      get useAuthStore() {\n        return useAuthStore;\n      },\n      SentTextMessage\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useRoute","onMounted","ref","firebaseApp","and","collection","doc","getDoc","getDocs","getFirestore","or","orderBy","query","where","useAuthStore","SentTextMessage","route","auth","nickname","messages","db","messagesColRef","userDocRef","params","uid","then","snapshot","exists","value","data","q","user","forEach","push","console","log"],"sources":["D:/UserData/Desktop/UEK/PSM/KKDP/psm-project/src/components/MessagesPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <header>{{ nickname.value }}</header>\r\n        <div class=\"content\">\r\n            <SentTextMessage content=\"Test Sent Message\"></SentTextMessage>\r\n        </div>\r\n        <footer>textbox</footer>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\n    .container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n\r\n    .container header, footer {\r\n        padding: 10px;\r\n    }\r\n    .container .content {\r\n        flex: 1 1 auto;\r\n        display: flex;\r\n        flex-direction: column-reverse;\r\n        overflow-y: auto;\r\n        min-height: 0px;\r\n    }\r\n\r\n    .sentMessage {\r\n        margin-left: 30%;\r\n        margin-right: 5px;\r\n        align-self: flex-end;\r\n        background-color: gray;\r\n    }\r\n\r\n    .sentMessage, .receivedMessage {\r\n        word-wrap: break-word;\r\n        text-align: left;\r\n        border-radius: 15px;\r\n        padding: 10px;\r\n        max-width: 70%;\r\n        margin-top: 5px;\r\n    }\r\n\r\n    .receivedMessage {\r\n        margin-right: 30%;\r\n        margin-left: 5px;\r\n        align-self: flex-start;\r\n        background-color:aqua;\r\n    }\r\n\r\n\r\n</style>\r\n\r\n<script setup>\r\n    import { useRoute } from 'vue-router';\r\n    import { onMounted, ref } from 'vue';\r\n    import { firebaseApp } from '@/firebase';\r\nimport { and, collection, doc, getDoc, getDocs, getFirestore, or, orderBy, query, where } from 'firebase/firestore';\r\nimport { useAuthStore } from '@/stores/auth';\r\nimport SentTextMessage from './messages/SentTextMessage.vue';\r\n    const route = useRoute();\r\n    const auth = useAuthStore();\r\n\r\n    let nickname = ref('');\r\n    let messages = ref([]);\r\n    onMounted(() => {\r\n        const db = getFirestore(firebaseApp)\r\n        const messagesColRef = collection(db, \"messages\");\r\n        const userDocRef = doc(db, \"users\", route.params.uid);\r\n\r\n        getDoc(userDocRef)\r\n        .then((snapshot) => {\r\n            if(snapshot.exists()) {\r\n                nickname.value = snapshot.data().nickname;\r\n            }\r\n        })\r\n\r\n        const q = query(messagesColRef, or(and(where('from', '==', auth.user.uid), where('to', '==', route.params.uid)), (where('to', '==', auth.user.uid), where('from', '==', route.params.uid))), orderBy('timestamp'));\r\n        getDocs(q)\r\n        .then((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n                let data = doc.data();\r\n                messages.value.push(data);\r\n            });\r\n            console.log(messages);\r\n        })\r\n    });\r\n\r\n</script>"],"mappings":";AAwDI,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,SAAS,EAAEC,GAAG,QAAQ,KAAK;AACpC,SAASC,WAAW,QAAQ,YAAY;AAC5C,SAASC,GAAG,EAAEC,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAEC,YAAY,EAAEC,EAAE,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;AACnH,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAOC,eAAe,MAAM,gCAAgC;;;;;;;IACxD,MAAMC,KAAK,GAAGhB,QAAQ,CAAC,CAAC;IACxB,MAAMiB,IAAI,GAAGH,YAAY,CAAC,CAAC;IAE3B,IAAII,QAAQ,GAAGhB,GAAG,CAAC,EAAE,CAAC;IACtB,IAAIiB,QAAQ,GAAGjB,GAAG,CAAC,EAAE,CAAC;IACtBD,SAAS,CAAC,MAAM;MACZ,MAAMmB,EAAE,GAAGX,YAAY,CAACN,WAAW,CAAC;MACpC,MAAMkB,cAAc,GAAGhB,UAAU,CAACe,EAAE,EAAE,UAAU,CAAC;MACjD,MAAME,UAAU,GAAGhB,GAAG,CAACc,EAAE,EAAE,OAAO,EAAEJ,KAAK,CAACO,MAAM,CAACC,GAAG,CAAC;MAErDjB,MAAM,CAACe,UAAU,CAAC,CACjBG,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAGA,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;UAClBT,QAAQ,CAACU,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAACX,QAAQ;QAC7C;MACJ,CAAC,CAAC;MAEF,MAAMY,CAAC,GAAGlB,KAAK,CAACS,cAAc,EAAEX,EAAE,CAACN,GAAG,CAACS,KAAK,CAAC,MAAM,EAAE,IAAI,EAAEI,IAAI,CAACc,IAAI,CAACP,GAAG,CAAC,EAAEX,KAAK,CAAC,IAAI,EAAE,IAAI,EAAEG,KAAK,CAACO,MAAM,CAACC,GAAG,CAAC,CAAC,GAAGX,KAAK,CAAC,IAAI,EAAE,IAAI,EAAEI,IAAI,CAACc,IAAI,CAACP,GAAG,CAAC,EAAEX,KAAK,CAAC,MAAM,EAAE,IAAI,EAAEG,KAAK,CAACO,MAAM,CAACC,GAAG,CAAC,CAAC,CAAC,EAAEb,OAAO,CAAC,WAAW,CAAC,CAAC;MAClNH,OAAO,CAACsB,CAAC,CAAC,CACTL,IAAI,CAAEC,QAAQ,IAAK;QAChBA,QAAQ,CAACM,OAAO,CAAE1B,GAAG,IAAK;UACtB,IAAIuB,IAAI,GAAGvB,GAAG,CAACuB,IAAI,CAAC,CAAC;UACrBV,QAAQ,CAACS,KAAK,CAACK,IAAI,CAACJ,IAAI,CAAC;QAC7B,CAAC,CAAC;QACFK,OAAO,CAACC,GAAG,CAAChB,QAAQ,CAAC;MACzB,CAAC,CAAC;IACN,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}