{"ast":null,"code":"import { vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  src: \"play.png\",\n  width: \"30px\"\n};\nconst _hoisted_2 = {\n  src: \"pause.png\",\n  width: \"30px\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    onClick: $setup.play,\n    class: \"sent\"\n  }, [_withDirectives(_createElementVNode(\"img\", _hoisted_1, null, 512 /* NEED_PATCH */), [[_vShow, $setup.isPaused]]), _withDirectives(_createElementVNode(\"img\", _hoisted_2, null, 512 /* NEED_PATCH */), [[_vShow, !$setup.isPaused]]), _createElementVNode(\"span\", null, _toDisplayString($setup.audio.currentTime), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["src","width","_createElementBlock","onClick","$setup","play","class","_createElementVNode","_hoisted_1","isPaused","_hoisted_2","_toDisplayString","audio","currentTime"],"sources":["D:\\UserData\\Desktop\\UEK\\PSM\\KKDP\\psm-project\\src\\components\\messages\\SentAudioMessage.vue"],"sourcesContent":["<template>\r\n    <div @click=\"play\" class=\"sent\">\r\n        <img v-show=\"isPaused\" src=\"play.png\" width=\"30px\"/>\r\n        <img v-show=\"!isPaused\" src=\"pause.png\" width=\"30px\"/>\r\n        <span>{{ audio.currentTime }}</span>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\n    div.sent {\r\n        display: flex;\r\n        word-wrap: break-word;\r\n        text-align: left;\r\n        border-radius: 15px;\r\n        padding: 10px;\r\n        width: 50%;\r\n        height: 100px;\r\n        max-width: 70%;\r\n        margin-top: 5px;\r\n        margin-left: 30%;\r\n        margin-right: 5px;\r\n        align-self: flex-end;\r\n        background-color: gray;\r\n    }\r\n</style>\r\n\r\n<script setup>\r\nimport { firebaseApp } from '@/firebase';\r\nimport { getDownloadURL, getStorage, ref as storageRef } from 'firebase/storage';\r\nimport { ref } from 'vue';\r\nconst props = defineProps(['content']);\r\nlet audio = new Audio();\r\nlet isPaused = ref(true);\r\nconst url = ref('');\r\nconst storage = getStorage(firebaseApp);\r\ngetDownloadURL(storageRef(storage, `audio/${props.content}`))\r\n.then((fetchUrl) => {\r\n    url.value = fetchUrl;\r\n    audio= new Audio(url.value);\r\n    audio.onpause = () => {\r\n        isPaused = true;\r\n        console.log('paused');\r\n    }\r\n    audio.onplay = () => {\r\n        console.log('played');\r\n        isPaused = false;\r\n    }\r\n})\r\n\r\nfunction play() {\r\n    if(audio.paused) {\r\n        audio.play();\r\n    } else{\r\n        audio.pause();\r\n    }\r\n}\r\n\r\n\r\n\r\n</script>"],"mappings":";;EAE+BA,GAAG,EAAC,UAAU;EAACC,KAAK,EAAC;;;EACpBD,GAAG,EAAC,WAAW;EAACC,KAAK,EAAC;;;uBAFlDC,mBAAA,CAIM;IAJAC,OAAK,EAAEC,MAAA,CAAAC,IAAI;IAAEC,KAAK,EAAC;sBACrBC,mBAAA,CAAoD,OAApDC,UAAoD,gC,SAAvCJ,MAAA,CAAAK,QAAQ,E,mBACrBF,mBAAA,CAAsD,OAAtDG,UAAsD,gC,UAAxCN,MAAA,CAAAK,QAAQ,E,GACtBF,mBAAA,CAAoC,cAAAI,gBAAA,CAA3BP,MAAA,CAAAQ,KAAK,CAACC,WAAW,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}