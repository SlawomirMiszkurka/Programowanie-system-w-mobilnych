{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"headerText\"\n}, \"Nowi znajomi\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"width\": \"30px\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"content\"\n};\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"header\", {\n    class: \"navbar\"\n  }, [_createElementVNode(\"img\", {\n    onClick: $setup.goBack,\n    src: \"back.png\",\n    width: \"30px\"\n  }), _hoisted_2, _hoisted_3]), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.newContactsData, recipent => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      onClick: $event => _ctx.openMessages(recipent.uid),\n      class: \"nick\",\n      key: recipent.uid\n    }, [_createElementVNode(\"h2\", null, _toDisplayString(recipent.nickname), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","_createElementBlock","_hoisted_1","onClick","$setup","goBack","src","width","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","newContactsData","recipent","$event","_ctx","openMessages","uid","key","_toDisplayString","nickname","_hoisted_5"],"sources":["D:\\UserData\\Desktop\\UEK\\PSM\\KKDP\\psm-project\\src\\components\\NewContactsPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <header class=\"navbar\">\r\n            <img @click=\"goBack\" src=\"back.png\" width=\"30px\"/>\r\n            <span class=\"headerText\">Nowi znajomi</span>\r\n            <div style=\"width: 30px;\"></div>\r\n        </header>\r\n        <div class=\"content\">\r\n            <div @click=\"openMessages(recipent.uid)\" class=\"nick\" v-for=\"recipent in newContactsData\" :key=\"recipent.uid\"><h2>{{ recipent.nickname }}</h2></div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n    import { firebaseApp } from '@/firebase';\r\nimport { useAuthStore } from '@/stores/auth';\r\nimport { collection, getDoc, getDocs, getFirestore, or, query, where } from 'firebase/firestore';\r\nimport { onMounted, ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\n\r\n    const router = useRouter();\r\n    const auth = useAuthStore();\r\n\r\n    let newContactsData = ref([]);\r\n\r\n    function goBack() {\r\n        router.go(-1);\r\n    }\r\n\r\n    onMounted(() => {\r\n        const db = getFirestore(firebaseApp);\r\n        const usersColRef = collection(db, \"users\");\r\n        const messagesColRef = collection(db, \"messages\");\r\n\r\n        const q = query(usersColRef, where('country', '==', auth.user.contactCountry), where('interests', '==', auth.user.interests));\r\n\r\n        let newContacts = [];\r\n\r\n        getDocs(q)\r\n        .then((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n                let data = doc.data();\r\n\r\n                newContacts.push(data.id);\r\n            })\r\n            const uniqueRecipents = [];\r\n\r\n            const q2 = query(messagesColRef, or(where('from', '==', auth.user.uid),\r\n            where('to', '==', auth.user.uid)))\r\n        \r\n            getDocs(q2)\r\n            .then((snapshot) => {\r\n                snapshot.forEach((doc) => {\r\n                    let data = doc.data();\r\n\r\n                    if(data.from != auth.user.uid && !uniqueRecipents.includes(data.from)) {\r\n                        uniqueRecipents.push(data.from);\r\n                    }\r\n\r\n                    if(data.to != auth.user.uid && !uniqueRecipents.includes(data.to)) {\r\n                        uniqueRecipents.push(data.to);\r\n                    }\r\n                })\r\n\r\n                let newContactsVerified = [];\r\n\r\n                newContacts.forEach((contact) => {\r\n                    if(!uniqueRecipents.includes(contact)) {\r\n                        newContactsVerified.push(contact);\r\n                    }\r\n                });\r\n\r\n                newContactsVerified.forEach(recipent => {\r\n                    const recipentDoc = doc(db, \"users\", recipent);\r\n                    getDoc(recipentDoc)\r\n                    .then((snapshot) => {\r\n                        if(snapshot.exists()) {\r\n                            newContactsData.value.push({\r\n                                'uid': recipent,\r\n                                nickname: snapshot.data().nickname\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n\r\n            })\r\n        })\r\n    });\r\n\r\n</script>"],"mappings":";;EACSA,KAAK,EAAC;AAAW;gCAGdC,mBAAA,CAA4C;EAAtCD,KAAK,EAAC;AAAY,GAAC,cAAY;gCACrCC,mBAAA,CAAgC;EAA3BC,KAAoB,EAApB;IAAA;EAAA;AAAoB;;EAExBF,KAAK,EAAC;AAAS;mBAP5B;;uBACIG,mBAAA,CASM,OATNC,UASM,GARFH,mBAAA,CAIS;IAJDD,KAAK,EAAC;EAAQ,IAClBC,mBAAA,CAAkD;IAA5CI,OAAK,EAAEC,MAAA,CAAAC,MAAM;IAAEC,GAAG,EAAC,UAAU;IAACC,KAAK,EAAC;MAC1CC,UAA4C,EAC5CC,UAAgC,C,GAEpCV,mBAAA,CAEM,OAFNW,UAEM,I,kBADFT,mBAAA,CAAoJU,SAAA,QARhKC,WAAA,CAQqFR,MAAA,CAAAS,eAAe,EAA3BC,QAAQ;yBAArEb,mBAAA,CAAoJ;MAA9IE,OAAK,EAAAY,MAAA,IAAEC,IAAA,CAAAC,YAAY,CAACH,QAAQ,CAACI,GAAG;MAAGpB,KAAK,EAAC,MAAM;MAAsCqB,GAAG,EAAEL,QAAQ,CAACI;QAAKnB,mBAAA,CAAgC,YAAAqB,gBAAA,CAAzBN,QAAQ,CAACO,QAAQ,iB,iBARlJC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}