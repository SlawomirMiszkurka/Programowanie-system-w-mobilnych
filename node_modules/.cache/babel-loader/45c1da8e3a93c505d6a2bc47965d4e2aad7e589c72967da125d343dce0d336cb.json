{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { firebaseApp } from '@/firebase';\nimport { doc, getFirestore, getDoc } from 'firebase/firestore';\nimport { signInWithEmailAndPassword, getAuth } from 'firebase/auth';\nimport { ref } from 'vue';\nimport { useAuthStore } from '@/stores/auth';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'LoginPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    // import { dbRef } from '@/firebase';\n    const email = ref('');\n    const password = ref('');\n    const isError = ref(false);\n    const loginError = ref('');\n    const router = useRouter();\n    function login() {\n      const auth = getAuth(firebaseApp);\n      signInWithEmailAndPassword(auth, email.value.value, password.value.value).then(({\n        user\n      }) => {\n        const db = getFirestore(firebaseApp);\n        const docRef = doc(db, \"users\", user.uid);\n        getDoc(docRef).then(doc => {\n          const authStore = useAuthStore();\n          if (doc.exists()) {\n            const userData = {\n              'uid': user.uid,\n              ...doc.data()\n            };\n            authStore.setUser(userData);\n            router.push('/home');\n          } else {\n            const userData = {\n              'uid': user.uid,\n              'email': user.email\n            };\n            authStore.setUser(userData);\n            router.push('/completeProfile');\n          }\n        });\n      });\n    }\n    const __returned__ = {\n      email,\n      password,\n      isError,\n      loginError,\n      router,\n      login,\n      get firebaseApp() {\n        return firebaseApp;\n      },\n      get doc() {\n        return doc;\n      },\n      get getFirestore() {\n        return getFirestore;\n      },\n      get getDoc() {\n        return getDoc;\n      },\n      get signInWithEmailAndPassword() {\n        return signInWithEmailAndPassword;\n      },\n      get getAuth() {\n        return getAuth;\n      },\n      ref,\n      get useAuthStore() {\n        return useAuthStore;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["firebaseApp","doc","getFirestore","getDoc","signInWithEmailAndPassword","getAuth","ref","useAuthStore","useRouter","email","password","isError","loginError","router","login","auth","value","then","user","db","docRef","uid","authStore","exists","userData","data","setUser","push"],"sources":["D:/UserData/Desktop/UEK/PSM/KKDP/psm-project/src/components/LoginPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <h1>Logowanie</h1>\r\n        <div>\r\n            <input type=\"text\" ref=\"email\" placeholder=\"E-mail\"><br>\r\n            <input type=\"password\" ref=\"password\" placeholder=\"HasÅ‚o\"><br>\r\n            <button @click=\"login\">Zaloguj</button>\r\n            <p v-if=\"isError\" style=\"color: red\">{{ loginError }}</p>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style>\r\n.container {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.container button {\r\n  padding: 10px 20px;\r\n  margin: 10px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  width: auto;\r\n}\r\n    /* body {\r\n            font-family: Arial, sans-serif;\r\n            margin: 0;\r\n            padding: 0;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            height: 100vh;\r\n            background-color: #f0f0f0;\r\n        }\r\n\r\n        .container {\r\n            text-align: center;\r\n        }\r\n\r\n        input[type=\"text\"],\r\n        input[type=\"password\"],\r\n        select,\r\n        textarea,\r\n        button {\r\n            margin: 10px;\r\n            padding: 10px;\r\n            font-size: 16px;\r\n            border-radius: 5px;\r\n            border: 1px solid #ccc;\r\n            width: 300px;\r\n            max-width: 100%;\r\n        }\r\n\r\n        button {\r\n            cursor: pointer;\r\n            background-color: #007bff;\r\n            color: #fff;\r\n            border: none;\r\n        }\r\n\r\n        button:hover {\r\n            background-color: #0056b3;\r\n        }\r\n\r\n        .error-msg {\r\n            color: red;\r\n        } */\r\n</style>\r\n\r\n<script setup>\r\n    // import { dbRef } from '@/firebase';\r\n    import { firebaseApp } from '@/firebase';\r\n    import { doc, getFirestore, getDoc } from 'firebase/firestore'\r\n    import { signInWithEmailAndPassword, getAuth } from 'firebase/auth';\r\n    import { ref } from 'vue';\r\n    import { useAuthStore } from '@/stores/auth';\r\n    import { useRouter } from 'vue-router';\r\n\r\n    const email = ref('');\r\n    const password = ref('');\r\n\r\n    const isError = ref(false);\r\n    const loginError = ref('');\r\n\r\n    const router = useRouter();\r\n\r\n    function login() {\r\n        const auth = getAuth(firebaseApp);\r\n        signInWithEmailAndPassword(auth, email.value.value, password.value.value)\r\n        .then(({ user }) => {\r\n            const db = getFirestore(firebaseApp);\r\n            const docRef = doc(db, \"users\", user.uid);\r\n            getDoc(docRef)\r\n            .then((doc) => {\r\n                    const authStore = useAuthStore();\r\n                if(doc.exists()) {\r\n                    const userData = {'uid': user.uid, ...doc.data()};\r\n                    authStore.setUser(userData);\r\n                    router.push('/home');\r\n                } else {\r\n                    const userData = { 'uid': user.uid, 'email': user.email}\r\n                    authStore.setUser(userData);\r\n                    router.push('/completeProfile')\r\n                }\r\n            })\r\n        })\r\n    }\r\n</script>"],"mappings":";AAgFI,SAASA,WAAW,QAAQ,YAAY;AACxC,SAASC,GAAG,EAAEC,YAAY,EAAEC,MAAM,QAAQ,oBAAoB;AAC9D,SAASC,0BAA0B,EAAEC,OAAO,QAAQ,eAAe;AACnE,SAASC,GAAG,QAAQ,KAAK;AACzB,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,SAAS,QAAQ,YAAY;;;;;;;;IANtC;IAQA,MAAMC,KAAK,GAAGH,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMI,QAAQ,GAAGJ,GAAG,CAAC,EAAE,CAAC;IAExB,MAAMK,OAAO,GAAGL,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMM,UAAU,GAAGN,GAAG,CAAC,EAAE,CAAC;IAE1B,MAAMO,MAAM,GAAGL,SAAS,CAAC,CAAC;IAE1B,SAASM,KAAKA,CAAA,EAAG;MACb,MAAMC,IAAI,GAAGV,OAAO,CAACL,WAAW,CAAC;MACjCI,0BAA0B,CAACW,IAAI,EAAEN,KAAK,CAACO,KAAK,CAACA,KAAK,EAAEN,QAAQ,CAACM,KAAK,CAACA,KAAK,CAAC,CACxEC,IAAI,CAAC,CAAC;QAAEC;MAAK,CAAC,KAAK;QAChB,MAAMC,EAAE,GAAGjB,YAAY,CAACF,WAAW,CAAC;QACpC,MAAMoB,MAAM,GAAGnB,GAAG,CAACkB,EAAE,EAAE,OAAO,EAAED,IAAI,CAACG,GAAG,CAAC;QACzClB,MAAM,CAACiB,MAAM,CAAC,CACbH,IAAI,CAAEhB,GAAG,IAAK;UACP,MAAMqB,SAAS,GAAGf,YAAY,CAAC,CAAC;UACpC,IAAGN,GAAG,CAACsB,MAAM,CAAC,CAAC,EAAE;YACb,MAAMC,QAAQ,GAAG;cAAC,KAAK,EAAEN,IAAI,CAACG,GAAG;cAAE,GAAGpB,GAAG,CAACwB,IAAI,CAAC;YAAC,CAAC;YACjDH,SAAS,CAACI,OAAO,CAACF,QAAQ,CAAC;YAC3BX,MAAM,CAACc,IAAI,CAAC,OAAO,CAAC;UACxB,CAAC,MAAM;YACH,MAAMH,QAAQ,GAAG;cAAE,KAAK,EAAEN,IAAI,CAACG,GAAG;cAAE,OAAO,EAAEH,IAAI,CAACT;YAAK,CAAC;YACxDa,SAAS,CAACI,OAAO,CAACF,QAAQ,CAAC;YAC3BX,MAAM,CAACc,IAAI,CAAC,kBAAkB,CAAC;UACnC;QACJ,CAAC,CAAC;MACN,CAAC,CAAC;IACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}