{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { firebaseApp } from '@/firebase';\nimport { useAuthStore } from '@/stores/auth';\nimport { collection, doc, getDoc, getDocs, getFirestore, or, query, where } from 'firebase/firestore';\nimport { onMounted, ref } from 'vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'MessagesListPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let uniqueRecipentsData = ref([]);\n    const router = useRouter();\n    function openMessages(uid) {\n      router.push(`/messages/${uid}`);\n    }\n    function goBack() {\n      router.go(-1);\n    }\n    onMounted(() => {\n      const db = getFirestore(firebaseApp);\n      const messagesColRef = collection(db, \"messages\");\n      const auth = useAuthStore();\n      const q = query(messagesColRef, or(where('from', '==', auth.user.uid), where('to', '==', auth.user.uid)));\n      const uniqueRecipents = [];\n      getDocs(q).then(snapshot => {\n        snapshot.forEach(doc => {\n          let data = doc.data();\n          if (data.from != auth.user.uid && !uniqueRecipents.includes(data.from)) {\n            uniqueRecipents.push(data.from);\n          }\n          if (data.to != auth.user.uid && !uniqueRecipents.includes(data.to)) {\n            uniqueRecipents.push(data.to);\n          }\n        });\n        uniqueRecipents.forEach(recipent => {\n          const recipentDoc = doc(db, \"users\", recipent);\n          getDoc(recipentDoc).then(snapshot => {\n            if (snapshot.exists()) {\n              uniqueRecipentsData.value.push({\n                'uid': recipent,\n                nickname: snapshot.data().nickname\n              });\n            }\n          });\n        });\n        console.log(uniqueRecipentsData);\n      });\n    });\n    const __returned__ = {\n      get uniqueRecipentsData() {\n        return uniqueRecipentsData;\n      },\n      set uniqueRecipentsData(v) {\n        uniqueRecipentsData = v;\n      },\n      router,\n      openMessages,\n      goBack,\n      get firebaseApp() {\n        return firebaseApp;\n      },\n      get useAuthStore() {\n        return useAuthStore;\n      },\n      get collection() {\n        return collection;\n      },\n      get doc() {\n        return doc;\n      },\n      get getDoc() {\n        return getDoc;\n      },\n      get getDocs() {\n        return getDocs;\n      },\n      get getFirestore() {\n        return getFirestore;\n      },\n      get or() {\n        return or;\n      },\n      get query() {\n        return query;\n      },\n      get where() {\n        return where;\n      },\n      onMounted,\n      ref,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["firebaseApp","useAuthStore","collection","doc","getDoc","getDocs","getFirestore","or","query","where","onMounted","ref","useRouter","uniqueRecipentsData","router","openMessages","uid","push","goBack","go","db","messagesColRef","auth","q","user","uniqueRecipents","then","snapshot","forEach","data","from","includes","to","recipent","recipentDoc","exists","value","nickname","console","log"],"sources":["D:/UserData/Desktop/UEK/PSM/KKDP/psm-project/src/components/MessagesListPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <header class=\"navbar\">\r\n            <img @click=\"goBack\" src=\"back.png\" width=\"30px\"/>\r\n            <span class=\"navbarText\">Wiadomo≈õci</span>\r\n            <div style=\"width: 30px\"></div>\r\n        </header>\r\n        <div @click=\"openMessages(recipent.uid)\" class=\"nick\" v-for=\"recipent in uniqueRecipentsData\" :key=\"recipent.uid\"><h2>{{ recipent.nickname }}</h2></div>\r\n    </div>\r\n</template>\r\n<style>\r\n\r\n</style>\r\n<script setup>\r\n    import { firebaseApp } from '@/firebase';\r\nimport { useAuthStore } from '@/stores/auth';\r\nimport { collection, doc, getDoc, getDocs, getFirestore, or, query, where } from 'firebase/firestore';\r\nimport { onMounted, ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\n\r\n    let uniqueRecipentsData = ref([]);\r\n\r\n    const router = useRouter();\r\n\r\n    function openMessages(uid) {\r\n        router.push(`/messages/${uid}`)\r\n    }\r\n\r\n    function goBack() {\r\n        router.go(-1);\r\n    }\r\n\r\n    onMounted(() => {\r\n        const db = getFirestore(firebaseApp);\r\n        const messagesColRef = collection(db, \"messages\");\r\n        const auth = useAuthStore();\r\n\r\n        const q = query(messagesColRef, or(where('from', '==', auth.user.uid),\r\n        where('to', '==', auth.user.uid)\r\n        ))\r\n\r\n        const uniqueRecipents = [];\r\n\r\n        getDocs(q)\r\n        .then((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n                let data = doc.data();\r\n\r\n                if(data.from != auth.user.uid && !uniqueRecipents.includes(data.from)) {\r\n                    uniqueRecipents.push(data.from);\r\n                }\r\n\r\n                if(data.to != auth.user.uid && !uniqueRecipents.includes(data.to)) {\r\n                    uniqueRecipents.push(data.to);\r\n                }\r\n            })\r\n\r\n            \r\n\r\n            uniqueRecipents.forEach(recipent => {\r\n                const recipentDoc = doc(db, \"users\", recipent);\r\n                getDoc(recipentDoc)\r\n                .then((snapshot) => {\r\n                    if(snapshot.exists()) {\r\n                        uniqueRecipentsData.value.push({\r\n                            'uid': recipent,\r\n                            nickname: snapshot.data().nickname\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n\r\n            console.log(uniqueRecipentsData);\r\n        })\r\n\r\n\r\n    });\r\n</script>"],"mappings":";AAcI,SAASA,WAAW,QAAQ,YAAY;AAC5C,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAEC,YAAY,EAAEC,EAAE,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;AACrG,SAASC,SAAS,EAAEC,GAAG,QAAQ,KAAK;AACpC,SAASC,SAAS,QAAQ,YAAY;;;;;;;IAElC,IAAIC,mBAAmB,GAAGF,GAAG,CAAC,EAAE,CAAC;IAEjC,MAAMG,MAAM,GAAGF,SAAS,CAAC,CAAC;IAE1B,SAASG,YAAYA,CAACC,GAAG,EAAE;MACvBF,MAAM,CAACG,IAAI,CAAE,aAAYD,GAAI,EAAC,CAAC;IACnC;IAEA,SAASE,MAAMA,CAAA,EAAG;MACdJ,MAAM,CAACK,EAAE,CAAC,CAAC,CAAC,CAAC;IACjB;IAEAT,SAAS,CAAC,MAAM;MACZ,MAAMU,EAAE,GAAGd,YAAY,CAACN,WAAW,CAAC;MACpC,MAAMqB,cAAc,GAAGnB,UAAU,CAACkB,EAAE,EAAE,UAAU,CAAC;MACjD,MAAME,IAAI,GAAGrB,YAAY,CAAC,CAAC;MAE3B,MAAMsB,CAAC,GAAGf,KAAK,CAACa,cAAc,EAAEd,EAAE,CAACE,KAAK,CAAC,MAAM,EAAE,IAAI,EAAEa,IAAI,CAACE,IAAI,CAACR,GAAG,CAAC,EACrEP,KAAK,CAAC,IAAI,EAAE,IAAI,EAAEa,IAAI,CAACE,IAAI,CAACR,GAAG,CAC/B,CAAC,CAAC;MAEF,MAAMS,eAAe,GAAG,EAAE;MAE1BpB,OAAO,CAACkB,CAAC,CAAC,CACTG,IAAI,CAAEC,QAAQ,IAAK;QAChBA,QAAQ,CAACC,OAAO,CAAEzB,GAAG,IAAK;UACtB,IAAI0B,IAAI,GAAG1B,GAAG,CAAC0B,IAAI,CAAC,CAAC;UAErB,IAAGA,IAAI,CAACC,IAAI,IAAIR,IAAI,CAACE,IAAI,CAACR,GAAG,IAAI,CAACS,eAAe,CAACM,QAAQ,CAACF,IAAI,CAACC,IAAI,CAAC,EAAE;YACnEL,eAAe,CAACR,IAAI,CAACY,IAAI,CAACC,IAAI,CAAC;UACnC;UAEA,IAAGD,IAAI,CAACG,EAAE,IAAIV,IAAI,CAACE,IAAI,CAACR,GAAG,IAAI,CAACS,eAAe,CAACM,QAAQ,CAACF,IAAI,CAACG,EAAE,CAAC,EAAE;YAC/DP,eAAe,CAACR,IAAI,CAACY,IAAI,CAACG,EAAE,CAAC;UACjC;QACJ,CAAC,CAAC;QAIFP,eAAe,CAACG,OAAO,CAACK,QAAQ,IAAI;UAChC,MAAMC,WAAW,GAAG/B,GAAG,CAACiB,EAAE,EAAE,OAAO,EAAEa,QAAQ,CAAC;UAC9C7B,MAAM,CAAC8B,WAAW,CAAC,CAClBR,IAAI,CAAEC,QAAQ,IAAK;YAChB,IAAGA,QAAQ,CAACQ,MAAM,CAAC,CAAC,EAAE;cAClBtB,mBAAmB,CAACuB,KAAK,CAACnB,IAAI,CAAC;gBAC3B,KAAK,EAAEgB,QAAQ;gBACfI,QAAQ,EAAEV,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACQ;cAC9B,CAAC,CAAC;YACN;UACJ,CAAC,CAAC;QACN,CAAC,CAAC;QAEFC,OAAO,CAACC,GAAG,CAAC1B,mBAAmB,CAAC;MACpC,CAAC,CAAC;IAGN,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}