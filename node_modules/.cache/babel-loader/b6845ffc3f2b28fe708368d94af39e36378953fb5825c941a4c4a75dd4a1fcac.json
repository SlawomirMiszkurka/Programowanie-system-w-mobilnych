{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { firebaseApp } from '@/firebase';\nimport { useAuthStore } from '@/stores/auth';\nimport { collection, getDoc, getDocs, getFirestore, or, query, where } from 'firebase/firestore';\nimport { onMounted, ref } from 'vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'NewContactsPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const auth = useAuthStore();\n    let newContactsData = ref([]);\n    function goBack() {\n      router.go(-1);\n    }\n    onMounted(() => {\n      const db = getFirestore(firebaseApp);\n      const usersColRef = collection(db, \"users\");\n      const messagesColRef = collection(db, \"messages\");\n      const q = query(usersColRef, where('country', '==', auth.user.contactCountry), where('interests', '==', auth.user.interests));\n      let newContacts = [];\n      getDocs(q).then(snapshot => {\n        snapshot.forEach(doc => {\n          let data = doc.data();\n          newContacts.push(data.id);\n        });\n        const uniqueRecipents = [];\n        const q2 = query(messagesColRef, or(where('from', '==', auth.user.uid), where('to', '==', auth.user.uid)));\n        getDocs(q2).then(snapshot => {\n          snapshot.forEach(doc => {\n            let data = doc.data();\n            if (data.from != auth.user.uid && !uniqueRecipents.includes(data.from)) {\n              uniqueRecipents.push(data.from);\n            }\n            if (data.to != auth.user.uid && !uniqueRecipents.includes(data.to)) {\n              uniqueRecipents.push(data.to);\n            }\n          });\n          let newContactsVerified = [];\n          newContacts.forEach(contact => {\n            if (!uniqueRecipents.includes(contact)) {\n              newContactsVerified.push(contact);\n            }\n          });\n          newContactsVerified.forEach(recipent => {\n            const recipentDoc = doc(db, \"users\", recipent);\n            getDoc(recipentDoc).then(snapshot => {\n              if (snapshot.exists()) {\n                newContactsData.value.push({\n                  'uid': recipent,\n                  nickname: snapshot.data().nickname\n                });\n              }\n            });\n          });\n        });\n      });\n    });\n    const __returned__ = {\n      router,\n      auth,\n      get newContactsData() {\n        return newContactsData;\n      },\n      set newContactsData(v) {\n        newContactsData = v;\n      },\n      goBack,\n      get firebaseApp() {\n        return firebaseApp;\n      },\n      get useAuthStore() {\n        return useAuthStore;\n      },\n      get collection() {\n        return collection;\n      },\n      get getDoc() {\n        return getDoc;\n      },\n      get getDocs() {\n        return getDocs;\n      },\n      get getFirestore() {\n        return getFirestore;\n      },\n      get or() {\n        return or;\n      },\n      get query() {\n        return query;\n      },\n      get where() {\n        return where;\n      },\n      onMounted,\n      ref,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["firebaseApp","useAuthStore","collection","getDoc","getDocs","getFirestore","or","query","where","onMounted","ref","useRouter","router","auth","newContactsData","goBack","go","db","usersColRef","messagesColRef","q","user","contactCountry","interests","newContacts","then","snapshot","forEach","doc","data","push","id","uniqueRecipents","q2","uid","from","includes","to","newContactsVerified","contact","recipent","recipentDoc","exists","value","nickname"],"sources":["D:/UserData/Desktop/UEK/PSM/KKDP/psm-project/src/components/NewContactsPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <header class=\"navbar\">\r\n            <img @click=\"goBack\" src=\"back.png\" width=\"30px\"/>\r\n            <span class=\"headerText\">Nowi znajomi</span>\r\n            <div style=\"width: 30px;\"></div>\r\n        </header>\r\n        <div class=\"content\">\r\n            <div @click=\"openMessages(recipent.uid)\" class=\"nick\" v-for=\"recipent in newContactsData\" :key=\"recipent.uid\"><h2>{{ recipent.nickname }}</h2></div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n    import { firebaseApp } from '@/firebase';\r\nimport { useAuthStore } from '@/stores/auth';\r\nimport { collection, getDoc, getDocs, getFirestore, or, query, where } from 'firebase/firestore';\r\nimport { onMounted, ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\n\r\n    const router = useRouter();\r\n    const auth = useAuthStore();\r\n\r\n    let newContactsData = ref([]);\r\n\r\n    function goBack() {\r\n        router.go(-1);\r\n    }\r\n\r\n    onMounted(() => {\r\n        const db = getFirestore(firebaseApp);\r\n        const usersColRef = collection(db, \"users\");\r\n        const messagesColRef = collection(db, \"messages\");\r\n\r\n        const q = query(usersColRef, where('country', '==', auth.user.contactCountry), where('interests', '==', auth.user.interests));\r\n\r\n        let newContacts = [];\r\n\r\n        getDocs(q)\r\n        .then((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n                let data = doc.data();\r\n\r\n                newContacts.push(data.id);\r\n            })\r\n            const uniqueRecipents = [];\r\n\r\n            const q2 = query(messagesColRef, or(where('from', '==', auth.user.uid),\r\n            where('to', '==', auth.user.uid)))\r\n        \r\n            getDocs(q2)\r\n            .then((snapshot) => {\r\n                snapshot.forEach((doc) => {\r\n                    let data = doc.data();\r\n\r\n                    if(data.from != auth.user.uid && !uniqueRecipents.includes(data.from)) {\r\n                        uniqueRecipents.push(data.from);\r\n                    }\r\n\r\n                    if(data.to != auth.user.uid && !uniqueRecipents.includes(data.to)) {\r\n                        uniqueRecipents.push(data.to);\r\n                    }\r\n                })\r\n\r\n                let newContactsVerified = [];\r\n\r\n                newContacts.forEach((contact) => {\r\n                    if(!uniqueRecipents.includes(contact)) {\r\n                        newContactsVerified.push(contact);\r\n                    }\r\n                });\r\n\r\n                newContactsVerified.forEach(recipent => {\r\n                    const recipentDoc = doc(db, \"users\", recipent);\r\n                    getDoc(recipentDoc)\r\n                    .then((snapshot) => {\r\n                        if(snapshot.exists()) {\r\n                            newContactsData.value.push({\r\n                                'uid': recipent,\r\n                                nickname: snapshot.data().nickname\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n\r\n            })\r\n        })\r\n    });\r\n\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}